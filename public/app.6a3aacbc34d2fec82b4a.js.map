{"version":3,"sources":["webpack:///app.6a3aacbc34d2fec82b4a.js","webpack:///webpack/bootstrap b44561e2fdab89a09f45","webpack:///./src/main.js","webpack:///./~/vue-resource/src/util.js","webpack:///./~/vue-resource/src/promise.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/addStyles.js","webpack:///./~/Vue/dist/vue.common.js","webpack:///App.vue","webpack:///Header.vue","webpack:///MainView.vue","webpack:///PlayList.vue","webpack:///Player.vue","webpack:///ProgressLine.vue","webpack:///SearchList.vue","webpack:///SearchView.vue","webpack:///./src/components/App.vue?a758","webpack:///./src/components/SearchView.vue?52a3","webpack:///./src/components/App.vue?13cb","webpack:///./src/components/Header.vue?2863","webpack:///./src/components/MainView.vue?c8d4","webpack:///./src/components/PlayList.vue?b806","webpack:///./src/components/Player.vue?5b7b","webpack:///./src/components/ProgressLine.vue?f4e3","webpack:///./src/components/SearchList.vue?eaa0","webpack:///./src/components/SearchView.vue?b233","webpack:///./src/components/App.vue","webpack:///./src/components/Header.vue","webpack:///./src/components/MainView.vue","webpack:///./src/components/PlayList.vue","webpack:///./src/components/Player.vue","webpack:///./src/components/ProgressLine.vue","webpack:///./src/components/SearchList.vue","webpack:///./src/components/SearchView.vue","webpack:///./~/vue-resource/src/http/before.js","webpack:///./~/vue-resource/src/http/client/index.js","webpack:///./~/vue-resource/src/http/client/jsonp.js","webpack:///./~/vue-resource/src/http/client/xdr.js","webpack:///./~/vue-resource/src/http/client/xhr.js","webpack:///./~/vue-resource/src/http/cors.js","webpack:///./~/vue-resource/src/http/header.js","webpack:///./~/vue-resource/src/http/index.js","webpack:///./~/vue-resource/src/http/interceptor.js","webpack:///./~/vue-resource/src/http/jsonp.js","webpack:///./~/vue-resource/src/http/method.js","webpack:///./~/vue-resource/src/http/mime.js","webpack:///./~/vue-resource/src/http/timeout.js","webpack:///./~/vue-resource/src/index.js","webpack:///./~/vue-resource/src/lib/promise.js","webpack:///./~/vue-resource/src/lib/url-template.js","webpack:///./~/vue-resource/src/resource.js","webpack:///./~/vue-resource/src/url/index.js","webpack:///./~/vue-resource/src/url/legacy.js","webpack:///./~/vue-resource/src/url/query.js","webpack:///./~/vue-resource/src/url/root.js","webpack:///./~/vue-resource/src/url/template.js","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./src/components/App.vue?17ad","webpack:///./src/components/SearchView.vue?2abf"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","Vue","VueRouter","App","Search","Main","use","router","transitionOnLoad","map","/","component","/search","start","merge","target","source","deep","key","_","isPlainObject","isArray","undefined","array","console","window","warn","msg","warning","config","silent","debug","error","trim","str","replace","toLower","toLowerCase","Array","isString","val","isFunction","isObject","obj","Object","getPrototypeOf","prototype","options","fn","bind","$vm","$options","each","iterator","i","length","hasOwnProperty","defaults","extend","args","slice","arguments","forEach","arg","Promise","executor","context","PromiseObj","this","promise","all","iterable","resolve","value","reject","reason","race","then","fulfilled","rejected","callback","success","response","data","status","always","cb","list","toString","result","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","head","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","nextSibling","insertBefore","appendChild","firstChild","Error","removeStyleElement","parentNode","removeChild","idx","indexOf","splice","createStyleElement","document","createElement","type","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","setAttribute","sources","btoa","unescape","encodeURIComponent","JSON","stringify","memoize","memo","apply","isOldIE","test","navigator","userAgent","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","global","set","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","isLiteral","exp","literalValueRE","isReserved","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","camelize","camelizeRE","toUpper","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","ret","to","from","keys","OBJECT_STRING","def","enumerable","defineProperty","writable","configurable","_debounce","func","wait","timeout","timestamp","later","last","Date","now","setTimeout","arr","cancellable","cancelled","cancel","looseEqual","Cache","limit","size","tail","_keymap","create","pushFilter","lastFilterIndex","tokens","match","filterTokenRE","name","processFilterArg","dir","filters","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","querySelector","inDoc","node","doc","documentElement","parent","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","after","prepend","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","guardProps","props","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","pushWatcher","user","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","Math","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","setObjectClasses","stringToObject","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","coerceProp","getPropDefaultValue","assertProp","required","expectedType","valid","String","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawValue","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","dataAPI","clean","asStatement","$arguments","$delete","$watch","sync","immediate","filterRE$1","$interpolate","$log","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","reduce","$value","$key","orderBy","sortKey","reverse","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","mixin","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","paramAttributes","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","params","inMatch","itMatch","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","isSimple","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version","Player","music-ctrl","playList","songIndex","pushSong","song","add-song","cut-song","$http","Header","List","music-header","play-list","play","contextMenu","ProgressLine","playState","playMode","running","progress-line","music","pause","len","loop","random","playByIndex","playEnded","playStateChange","paused","progress","$music","buffered","round","duration","timeupdate","currentTime","url","songUrl","currentSong","cut-play","playIndex","searchList","onItemClick","search-list","__vue_script__","__vue_template__","__esModule","request","beforeSend","parseHeaders","headers","row","xhrClient","client","ok","script","substr","jsonp","onload","onerror","xdr","XDomainRequest","abort","responseText","statusText","onabort","ontimeout","onprogress","send","xhr","XMLHttpRequest","getAllResponseHeaders","upload","header","setRequestHeader","crossOrigin","requestUrl","protocol","originUrl","xdrClient","xhrCors","location","href","emulateHTTP","http","common","custom","Http","Client","interceptors","interceptor","jsonType","Content-Type","emulateJSON","post","patch","Accept","X-Requested-With","when","jsonpClient","clearTimeout","resource","$url","$resource","$promise","state","PENDING","deferred","x","r","RESOLVED","REJECTED","resolver","TypeError","onResolved","onRejected","expand","variables","tmpl","expanded","vars","operators","operator","values","variable","getValues","separator","encodeReserved","modifier","isDefined","substring","encodeValue","isKeyOperator","encodeURI","Resource","opts","Url","transform","transforms","serialize","plain","ie","documentMode","root","escape","port","hostname","pathname","encodeUriSegment","encodeUriQuery","spaces","slash","urlParams","UrlTemplate","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","route","eachRoute","baseRoute","binding","addRouteCallback","noWarning","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","results","segment","State","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","regex","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","warn$1","resolvePath","base","relative","stack","pop","isPromise","getRouteConfig","resolveAsyncComponent","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","button","go","history","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","formatPath","_linkActiveClass","dest","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","Constructor","willAddRoute","addChild","contextEntered","specials","validChars","generate","invalidChars","repeat","isEqual","chars","returned","oCreate","proto","F","RouteRecognizer","rootState","allSegments","isEmpty","as","handlersFor","hasRoute","output","generateQueryString","pairs","pair","arrayPair","parseQueryString","queryString","keyLength","recognize","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","replaceState","pos","pageXOffset","y","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reuseQueue","runQueue","_onTransitionValidated","_view","step","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","err","_suppress","onPromiseError","nextWithBoolean","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","afterEach","_appContainer","Ctor","_appConstructor","_location","assign","generatedPath","currentParams","targetParams","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","locals"],"mappings":"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","file":"app.6a3aacbc34d2fec82b4a.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar Vue = __webpack_require__(5);\n\tvar VueRouter = __webpack_require__(54);\n\tvar App = __webpack_require__(24);\n\tvar Search = __webpack_require__(31);\n\tvar Main = __webpack_require__(26);\n\t\n\tVue.use(__webpack_require__(45));\n\tVue.use(VueRouter);\n\t\n\tvar router = new VueRouter({\n\t    transitionOnLoad: true\n\t});\n\t\n\trouter.map({\n\t    '/': {\n\t        component: Main\n\t    },\n\t    '/search': {\n\t        component: Search\n\t    }\n\t});\n\t\n\trouter.start(App, '#app');\n\t\n\t// new Vue({\n\t//     el: 'app',\n\t//     components: {\n\t//         app: App\n\t//     }\n\t// });\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Utility functions.\n\t */\n\t\n\tvar _ = exports, array = [], console = window.console;\n\t\n\t_.warn = function (msg) {\n\t    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n\t        console.warn('[VueResource warn]: ' + msg);\n\t    }\n\t};\n\t\n\t_.error = function (msg) {\n\t    if (console) {\n\t        console.error(msg);\n\t    }\n\t};\n\t\n\t_.trim = function (str) {\n\t    return str.replace(/^\\s*|\\s*$/g, '');\n\t};\n\t\n\t_.toLower = function (str) {\n\t    return str ? str.toLowerCase() : '';\n\t};\n\t\n\t_.isArray = Array.isArray;\n\t\n\t_.isString = function (val) {\n\t    return typeof val === 'string';\n\t};\n\t\n\t_.isFunction = function (val) {\n\t    return typeof val === 'function';\n\t};\n\t\n\t_.isObject = function (obj) {\n\t    return obj !== null && typeof obj === 'object';\n\t};\n\t\n\t_.isPlainObject = function (obj) {\n\t    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t};\n\t\n\t_.options = function (fn, obj, options) {\n\t\n\t    options = options || {};\n\t\n\t    if (_.isFunction(options)) {\n\t        options = options.call(obj);\n\t    }\n\t\n\t    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n\t};\n\t\n\t_.each = function (obj, iterator) {\n\t\n\t    var i, key;\n\t\n\t    if (typeof obj.length == 'number') {\n\t        for (i = 0; i < obj.length; i++) {\n\t            iterator.call(obj[i], obj[i], i);\n\t        }\n\t    } else if (_.isObject(obj)) {\n\t        for (key in obj) {\n\t            if (obj.hasOwnProperty(key)) {\n\t                iterator.call(obj[key], obj[key], key);\n\t            }\n\t        }\n\t    }\n\t\n\t    return obj;\n\t};\n\t\n\t_.defaults = function (target, source) {\n\t\n\t    for (var key in source) {\n\t        if (target[key] === undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t\n\t    return target;\n\t};\n\t\n\t_.extend = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\t_.merge = function (target) {\n\t\n\t    var args = array.slice.call(arguments, 1);\n\t\n\t    args.forEach(function (arg) {\n\t        merge(target, arg, true);\n\t    });\n\t\n\t    return target;\n\t};\n\t\n\tfunction merge(target, source, deep) {\n\t    for (var key in source) {\n\t        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n\t            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n\t                target[key] = {};\n\t            }\n\t            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n\t                target[key] = [];\n\t            }\n\t            merge(target[key], source[key], deep);\n\t        } else if (source[key] !== undefined) {\n\t            target[key] = source[key];\n\t        }\n\t    }\n\t}\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promise adapter.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar PromiseObj = window.Promise || __webpack_require__(46);\n\t\n\tfunction Promise(executor, context) {\n\t\n\t    if (executor instanceof PromiseObj) {\n\t        this.promise = executor;\n\t    } else {\n\t        this.promise = new PromiseObj(executor.bind(context));\n\t    }\n\t\n\t    this.context = context;\n\t}\n\t\n\tPromise.all = function (iterable, context) {\n\t    return new Promise(PromiseObj.all(iterable), context);\n\t};\n\t\n\tPromise.resolve = function (value, context) {\n\t    return new Promise(PromiseObj.resolve(value), context);\n\t};\n\t\n\tPromise.reject = function (reason, context) {\n\t    return new Promise(PromiseObj.reject(reason), context);\n\t};\n\t\n\tPromise.race = function (iterable, context) {\n\t    return new Promise(PromiseObj.race(iterable), context);\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.bind = function (context) {\n\t    this.context = context;\n\t    return this;\n\t};\n\t\n\tp.then = function (fulfilled, rejected) {\n\t\n\t    if (fulfilled && fulfilled.bind && this.context) {\n\t        fulfilled = fulfilled.bind(this.context);\n\t    }\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.then(fulfilled, rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.catch = function (rejected) {\n\t\n\t    if (rejected && rejected.bind && this.context) {\n\t        rejected = rejected.bind(this.context);\n\t    }\n\t\n\t    this.promise = this.promise.catch(rejected);\n\t\n\t    return this;\n\t};\n\t\n\tp.finally = function (callback) {\n\t\n\t    return this.then(function (value) {\n\t            callback.call(this);\n\t            return value;\n\t        }, function (reason) {\n\t            callback.call(this);\n\t            return PromiseObj.reject(reason);\n\t        }\n\t    );\n\t};\n\t\n\tp.success = function (callback) {\n\t\n\t    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\t\n\t    return this.then(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.error = function (callback) {\n\t\n\t    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\t\n\t    return this.catch(function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    });\n\t};\n\t\n\tp.always = function (callback) {\n\t\n\t    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\t\n\t    var cb = function (response) {\n\t        return callback.call(this, response.data, response.status, response) || response;\n\t    };\n\t\n\t    return this.then(cb, cb);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\n\t\tAuthor Tobias Koppers @sokra\n\t*/\n\tvar stylesInDom = {},\n\t\tmemoize = function(fn) {\n\t\t\tvar memo;\n\t\t\treturn function () {\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\t\treturn memo;\n\t\t\t};\n\t\t},\n\t\tisOldIE = memoize(function() {\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t\t}),\n\t\tgetHeadElement = memoize(function () {\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t\t}),\n\t\tsingletonElement = null,\n\t\tsingletonCounter = 0,\n\t\tstyleElementsInsertedAtTop = [];\n\t\n\tmodule.exports = function(list, options) {\n\t\tif(false) {\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t\t}\n\t\n\t\toptions = options || {};\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t\t// tags it will allow on a page\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\t\n\t\t// By default, add <style> tags to the bottom of <head>.\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\t\n\t\tvar styles = listToStyles(list);\n\t\taddStylesToDom(styles, options);\n\t\n\t\treturn function update(newList) {\n\t\t\tvar mayRemove = [];\n\t\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\t\tvar item = styles[i];\n\t\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\t\tdomStyle.refs--;\n\t\t\t\tmayRemove.push(domStyle);\n\t\t\t}\n\t\t\tif(newList) {\n\t\t\t\tvar newStyles = listToStyles(newList);\n\t\t\t\taddStylesToDom(newStyles, options);\n\t\t\t}\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\t\tvar domStyle = mayRemove[i];\n\t\t\t\tif(domStyle.refs === 0) {\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\t\n\tfunction addStylesToDom(styles, options) {\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tif(domStyle) {\n\t\t\t\tdomStyle.refs++;\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t\t}\n\t\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar parts = [];\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t\t}\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction listToStyles(list) {\n\t\tvar styles = [];\n\t\tvar newStyles = {};\n\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\tvar item = list[i];\n\t\t\tvar id = item[0];\n\t\t\tvar css = item[1];\n\t\t\tvar media = item[2];\n\t\t\tvar sourceMap = item[3];\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\t\tif(!newStyles[id])\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\t\telse\n\t\t\t\tnewStyles[id].parts.push(part);\n\t\t}\n\t\treturn styles;\n\t}\n\t\n\tfunction insertStyleElement(options, styleElement) {\n\t\tvar head = getHeadElement();\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\t\tif (options.insertAt === \"top\") {\n\t\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t\t} else {\n\t\t\t\thead.appendChild(styleElement);\n\t\t\t}\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t\t} else if (options.insertAt === \"bottom\") {\n\t\t\thead.appendChild(styleElement);\n\t\t} else {\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t\t}\n\t}\n\t\n\tfunction removeStyleElement(styleElement) {\n\t\tstyleElement.parentNode.removeChild(styleElement);\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\t\tif(idx >= 0) {\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t\t}\n\t}\n\t\n\tfunction createStyleElement(options) {\n\t\tvar styleElement = document.createElement(\"style\");\n\t\tstyleElement.type = \"text/css\";\n\t\tinsertStyleElement(options, styleElement);\n\t\treturn styleElement;\n\t}\n\t\n\tfunction addStyle(obj, options) {\n\t\tvar styleElement, update, remove;\n\t\n\t\tif (options.singleton) {\n\t\t\tvar styleIndex = singletonCounter++;\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t\t} else {\n\t\t\tstyleElement = createStyleElement(options);\n\t\t\tupdate = applyToTag.bind(null, styleElement);\n\t\t\tremove = function() {\n\t\t\t\tremoveStyleElement(styleElement);\n\t\t\t};\n\t\t}\n\t\n\t\tupdate(obj);\n\t\n\t\treturn function updateStyle(newObj) {\n\t\t\tif(newObj) {\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\t\treturn;\n\t\t\t\tupdate(obj = newObj);\n\t\t\t} else {\n\t\t\t\tremove();\n\t\t\t}\n\t\t};\n\t}\n\t\n\tvar replaceText = (function () {\n\t\tvar textStore = [];\n\t\n\t\treturn function (index, replacement) {\n\t\t\ttextStore[index] = replacement;\n\t\t\treturn textStore.filter(Boolean).join('\\n');\n\t\t};\n\t})();\n\t\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\t\tvar css = remove ? \"\" : obj.css;\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t\t} else {\n\t\t\tvar cssNode = document.createTextNode(css);\n\t\t\tvar childNodes = styleElement.childNodes;\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\t\tif (childNodes.length) {\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t\t} else {\n\t\t\t\tstyleElement.appendChild(cssNode);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction applyToTag(styleElement, obj) {\n\t\tvar css = obj.css;\n\t\tvar media = obj.media;\n\t\tvar sourceMap = obj.sourceMap;\n\t\n\t\tif (media) {\n\t\t\tstyleElement.setAttribute(\"media\", media);\n\t\t}\n\t\n\t\tif (sourceMap) {\n\t\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t\t// this makes source maps inside style tags work properly in Chrome\n\t\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t\t// http://stackoverflow.com/a/26603875\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t\t}\n\t\n\t\tif (styleElement.styleSheet) {\n\t\t\tstyleElement.styleSheet.cssText = css;\n\t\t} else {\n\t\t\twhile(styleElement.firstChild) {\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t\t}\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\n\t\t}\n\t}\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.20\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (!key) continue;\n\t        if (isPlainObject(key)) {\n\t          var keys = Object.keys(key);\n\t          for (var k = 0; k < keys.length; k++) {\n\t            removeClass(this.el, keys[k]);\n\t          }\n\t        } else {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (obj[key]) {\n\t      addClass(el, key);\n\t    }\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop.options);\n\t  }\n\t  if (assertProp(prop, value)) {\n\t    defineReactive(vm, key, value);\n\t  }\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t    var isSimple = isSimplePath(parentKey);\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        if (isSimple) {\n\t          withoutConversion(function () {\n\t            child[childKey] = val;\n\t          });\n\t        } else {\n\t          child[childKey] = val;\n\t        }\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    var value = parentWatcher.value;\n\t    if (isSimple && value !== undefined) {\n\t      withoutConversion(function () {\n\t        initProp(child, prop, value);\n\t      });\n\t    } else {\n\t      initProp(child, prop, value);\n\t    }\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.');\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.');\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value);\n\t      if (false) {\n\t        assertAsset(factory, 'component', value);\n\t      }\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.20';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (config.devtools) {\n\t  if (devtools) {\n\t    devtools.emit('init', Vue);\n\t  } else if (false) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Player = __webpack_require__(28);\n\t\n\tmodule.exports = {\n\t    components: {\n\t        'music-ctrl': Player\n\t    },\n\t    data: function data() {\n\t        return {\n\t            playList: [],\n\t            songIndex: 0\n\t        };\n\t    },\n\t    methods: {\n\t        pushSong: function pushSong(song) {\n\t            var index = 0;\n\t            !this.playList.some(function (item, i) {\n\t                index = i;\n\t                return item.id === song.id;\n\t            }) && (this.playList.push(song), this.songIndex = index);\n\t        }\n\t    },\n\t    events: {\n\t        'add-song': function addSong(song) {\n\t            this.pushSong(song);\n\t            console.log(this.playList);\n\t        },\n\t        'cut-song': function cutSong(index) {\n\t            console.log('cut:' + index);\n\t\n\t            this.$broadcast('cut-play', index);\n\t        }\n\t    }\n\t\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    data: function data() {\n\t        return {\n\t            key: '曾经的你'\n\t        };\n\t    },\n\t    methods: {\n\t        search: function search() {\n\t\n\t            if (!this.key.trim()) {\n\t                return;\n\t            }\n\t\n\t            console.log(this.key);\n\t\n\t            this.$http.get('/search/' + this.key + '/1').then(function (res) {\n\t\n\t                this.$dispatch('fetch-list', res.data.list);\n\t            }, function (res) {\n\t                console.error('error: ' + res.status);\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Header = __webpack_require__(25);\n\tvar List = __webpack_require__(27);\n\t\n\tmodule.exports = {\n\t    components: {\n\t        'music-header': Header,\n\t        'play-list': List\n\t    },\n\t    props: {\n\t        playList: Array\n\t    },\n\t    methods: {}\n\t\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t    props: {\n\t        playList: Array\n\t    },\n\t    methods: {\n\t        play: function play(index) {\n\t            this.$dispatch('cut-song', index);\n\t        },\n\t        contextMenu: function contextMenu(item) {\n\t            console.log('more');\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ProgressLine = __webpack_require__(29);\n\t\n\tmodule.exports = {\n\t    data: function data() {\n\t        return {\n\t            playState: false,\n\t            playMode: {\n\t                index: 0,\n\t                list: ['loop', 'single', 'random']\n\t            },\n\t            running: 0,\n\t            total: 0\n\t        };\n\t    },\n\t    components: {\n\t        'progress-line': ProgressLine\n\t    },\n\t    props: {\n\t        songIndex: Number,\n\t        playList: Array\n\t    },\n\t    methods: {\n\t        play: function play() {\n\t            this.playState = !this.playState;\n\t            this.playList[this.songIndex] && this.playState ? this.$els.music.play() : this.$els.music.pause();\n\t        },\n\t        next: function next() {\n\t            var len = this.playList.length,\n\t                index = this.songIndex;\n\t\n\t            this.$els.music.loop = false;\n\t\n\t            switch (this.playMode.index) {\n\t                case 0:\n\t                    index = this.songIndex + 1 === len ? 0 : this.songIndex + 1;\n\t                    break;\n\t                case 2:\n\t                    index = Math.floor(Math.random() * (len - 1) + 1);\n\t                    break;\n\t                default:\n\t                    this.$els.music.loop = true;\n\t                    break;\n\t            }\n\t            console.log('playIndex:' + index);\n\t            this.playByIndex(index);\n\t        },\n\t        mode: function mode() {\n\t            var cur = this.playMode.index,\n\t                len = this.playMode.list.length;\n\t            this.playMode.index = cur + 1 === len ? 0 : cur + 1;\n\t        },\n\t        playEnded: function playEnded() {\n\t            console.log('next');\n\t            this.next();\n\t        },\n\t        playStateChange: function playStateChange() {\n\t            this.playState = !this.$els.music.paused;\n\t        },\n\t        progress: function progress() {\n\t            var $music = this.$els.music,\n\t                buffered = $music.buffered;\n\t\n\t            if (!buffered.length) return;\n\t\n\t            this.total = Math.round(buffered.end(buffered.length - 1) / $music.duration * 100);\n\t        },\n\t        timeupdate: function timeupdate() {\n\t            var $music = this.$els.music;\n\t            this.running = Math.round($music.currentTime / $music.duration * 100);\n\t        },\n\t        playByIndex: function playByIndex(index) {\n\t            this.songIndex = index;\n\t            this.$els.music.src = this.playList[this.songIndex].url;\n\t        }\n\t    },\n\t    computed: {\n\t        songUrl: {\n\t            get: function get() {\n\t                return this.song.url;\n\t            },\n\t            set: function set(song) {\n\t                this.song = song;\n\t            }\n\t        },\n\t        currentSong: function currentSong() {\n\t            return this.playList[this.songIndex];\n\t        }\n\t    },\n\t    events: {\n\t        'cut-play': function cutPlay(index) {\n\t            this.playIndex !== index && this.playByIndex(index);\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tmodule.exports = {\n\t    props: {\n\t        running: Number,\n\t        total: Number\n\t    }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t\n\t    props: {\n\t        searchList: Array\n\t    },\n\t    methods: {\n\t        onItemClick: function onItemClick(item) {\n\t            this.$http.get('/song/' + item.id).then(function (res) {\n\t                console.log('url:' + res.data);\n\t                item.url = res.data;\n\t                this.$dispatch('add-song', item);\n\t            }, function (res) {\n\t                console.error('error: ' + res.status);\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar List = __webpack_require__(30);\n\t\n\tmodule.exports = {\n\t    data: function data() {\n\t        return {\n\t            key: '曾经的你',\n\t            searchList: []\n\t        };\n\t    },\n\t    components: {\n\t        'search-list': List\n\t    },\n\t    methods: {\n\t        search: function search() {\n\t\n\t            if (!this.key.trim()) {\n\t                return;\n\t            }\n\t\n\t            console.log(this.key);\n\t\n\t            this.$http.get('/search/' + this.key + '/1').then(function (res) {\n\t\n\t                this.searchList = res.data.list;\n\t            }, function (res) {\n\t                console.error('error: ' + res.status);\n\t            });\n\t        }\n\t    }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"html{width:100%;max-height:100%;background-color:#fff;color:#212121;font-size:100px;overflow:hidden}::-webkit-scrollbar{display:none}*,:after,:before{box-sizing:border-box}body{-webkit-tap-highlight-color:rgba(255,255,255,0)}body,button,input,option,select,textarea{font:normal .14em Microsoft YaHei,helvetica neue,tahoma,sans-serif}blockquote,body,button,dd,dl,figure,h1,h2,h3,h4,h5,h6,input,p,pre{margin:0}button,input,legend,textarea{padding:0}fieldset,form,ol,td,th,ul{margin:0;padding:0}li,ol,ul{list-style:none}a{color:inherit;text-decoration:none}article,p{max-height:100%}img{width:100%;max-width:100%;border:none}address,em,i{font-style:normal}input[type=button],input[type=reset],input[type=search],input[type=submit]{-webkit-appearance:button}button:focus,input:focus,select:focus,textarea:focus{outline:none}textarea{resize:none}.fl{float:left}.fr{float:right}.oh{overflow:hidden}.tr{text-align:right}.tc{text-align:center}.clearfix:after,.row:after{content:\\\"\\\";display:table;clear:both;overflow:hidden}.ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.flex-row,.flex-row-vertical{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flex-row-vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.flex-row-wrap{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.flex-row-reverse{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.flex-row>*{display:block}.flex-col{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flex-middle{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;-ms-grid-row-align:center;align-items:center}.flex-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;-ms-grid-row-align:flex-end;align-items:flex-end}.flex-justify-start{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}.flex-justify-end{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}.flex-justify-between{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.flex-align-start{-webkit-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start}.flex-align-end{-webkit-align-content:flex-end;-ms-flex-line-pack:end;align-content:flex-end}.flex-align-around{-webkit-align-content:space-around;-ms-flex-line-pack:distribute;align-content:space-around}.flex-align-between{-webkit-align-content:space-between;-ms-flex-line-pack:justify;align-content:space-between}.flex-col-auto{-webkit-box-flex:0;-webkit-flex:0 auto;-ms-flex:0 auto;flex:0 auto}.container,.mr-both{margin-left:16px;margin-right:16px}.ml{margin-left:16px}.mr{margin-right:16px}@font-face{font-family:iconfont;src:url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'),url('//at.alicdn.com/t/font_1461831434_5471206.ttf') format('truetype')}.icon{display:inline-block;font-family:iconfont!important;font-size:.14rem;font-style:normal;font-weight:400;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-lg{font-size:.18rem}.icon-2x{font-size:.28rem}.icon-3x{font-size:.42rem}.icon-4x{font-size:.56rem}.icon-5x{font-size:.7rem}.icon-mode-loop:before{content:\\\"\\\\E602\\\"}.icon-mode-single:before{content:\\\"\\\\E603\\\"}.icon-mode-random:before{content:\\\"\\\\E604\\\"}.icon-search:before{content:\\\"\\\\E605\\\"}.icon-pause:before{content:\\\"\\\\E608\\\"}.icon-play:before{content:\\\"\\\\E607\\\"}.icon-music:before{content:\\\"\\\\E606\\\"}.icon-prev:before{content:\\\"\\\\E600\\\"}.icon-more:before{content:\\\"\\\\E601\\\"}.icon-next:before{content:\\\"\\\\E609\\\"}.bd-t{border:0 solid #dadada;border-top-width:1px}.bd-r{border:0 solid #dadada;border-right-width:1px}.bd-b{border:0 solid #dadada;border-bottom-width:1px}.bd-l{border:0 solid #dadada;border-left-width:1px}.bd-all,.bd-radius{border-width:0;border:1px solid #dadada}.bd-radius{border-radius:4px}.bd-dashed{border-style:dashed!important}hr{border:none}.hr,hr{margin:.7em 0;width:100%;height:1px;background:#dadada;overflow:hidden}@media screen and (-webkit-min-device-pixel-ratio:1.5){.ratina-bd{position:relative;border:none!important}.ratina-bd:before{content:'';position:absolute;top:0;left:0;border:0 solid #dadada;-webkit-transform-origin:0 0;transform-origin:0 0;pointer-events:none;width:150%;height:150%;-webkit-transform:scale(.66666667);transform:scale(.66666667)}.ratina-bd.bd-t:before{border-top-width:1px}.ratina-bd.bd-r:before{border-right-width:1px}.ratina-bd.bd-b:before{border-bottom-width:1px}.ratina-bd.bd-l:before{border-left-width:1px}.ratina-bd.bd-all:before{border-width:1px}.ratina-bd.bd-radius:before{border-width:1px;border-radius:6px}.ratina-bd.bd-dashed:before{border-style:dashed!important}.hr,hr{width:150%;-webkit-transform:scale(.66666667);transform:scale(.66666667);-webkit-transform-origin:0 0;transform-origin:0 0}}@media screen and (-webkit-min-device-pixel-ratio:2){.ratina-bd:before{width:200%;height:200%;-webkit-transform:scale(.5);transform:scale(.5)}.ratina-bd.bd-radius:before{border-radius:8px}.hr,hr{width:200%;-webkit-transform:scale(.5);transform:scale(.5)}}@media screen and (-webkit-min-device-pixel-ratio:3){.ratina-bd:before{width:300%;height:300%;-webkit-transform:scale(.33333333);transform:scale(.33333333)}.ratina-bd.bd-radius:before{border-radius:12px}.hr,hr{width:300%;-webkit-transform:scale(.33333333);transform:scale(.33333333)}}.m-btn{padding:0 16px;text-align:center;box-sizing:content-box;border-radius:4px}.m-btn:active{background:rgba(0,0,0,.26)}.m-btn.icon{width:20px;text-align:center}.m-hd{position:absolute;top:0;left:0;z-index:10;width:100%;height:56px;color:#fff;background:#4caf50;font-size:.16rem;box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}.m-hd .container{margin:10px 0;height:36px;line-height:36px}.m-hd ::-webkit-input-placeholder{color:#9fd69b}.m-hd button{background:none;white-space:nowrap}.m-hd button,.m-key{border:none;font-size:.16rem;color:#fff}.m-key{display:block;width:100%;height:36px;padding:0 40px 0 8px;background:#4caf50;border-bottom:1px solid #fff}.m-key-wrap{position:relative}.m-key-icon{position:absolute;top:1px;right:6px;color:#fff}.m-so{color:#c8e6c9}.m-player{position:absolute;left:0;bottom:0;z-index:66;width:100%;height:56px;background:#fff}.m-player .container{margin:8px 0}.m-pic-s{width:40px;height:40px;margin-right:16px;border-radius:50%;overflow:hidden}.m-act,.m-txt .singer{color:#727272}.m-act{line-height:40px}.m-main{position:absolute;top:0;left:0;z-index:2;width:100%;height:100%;max-height:100%;padding:56px 0 55px;overflow-y:auto;background:#fcfcfc}.m-list-item{line-height:1.8;font-size:.16rem}.m-list-item .container{display:block;height:56px;line-height:56px}.m-list-item:active{background:rgba(0,0,0,.26)}.m-list-item .sub{color:#727272}.m-play-item{position:relative}.m-play-item:after{position:absolute;top:0;left:16px;content:attr(data-index);width:20px;line-height:62px;text-align:center;font-size:.24rem;color:#727272}.m-play-item .container{margin-left:52px;margin-right:0;padding:8px 52px 8px 0;height:auto;line-height:1.7;font-size:.15rem}.m-play-item .sub{font-size:.12rem}.m-play-item .icon-more{position:absolute;top:0;right:0;width:14px;line-height:62px;color:#727272}.m-play-item .icon-more:active{background:none}.progress-line{position:absolute;bottom:0;left:0;z-index:1;height:3px;background:#c8e6c9}.progress-line.primary{background:#388e3c;z-index:2}.fade-in-bottom-transition,.fade-in-left-transition,.fade-out-left-transition{-webkit-transition:all .4s ease;transition:all .4s ease}.fade-in-left-enter,.fade-in-left-leave{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);box-shadow:none}.fade-out-left-enter,.fade-out-left-leave{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);box-shadow:none}.fade-in-bottom-enter,.fade-in-bottom-leave{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(3)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".search-view{position:absolute;top:0;left:0;width:100%;height:100%;max-height:100%;background:#fff;z-index:12}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div id=app> <router-view :play-list=playList></router-view> <music-ctrl :song-index=songIndex :play-list=playList></music-ctrl> </div>\";\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header id=m-hd class=m-hd> <div class=\\\"flex-row container\\\"> <div class=\\\"m-logo mr-both\\\"><span class=\\\"icon icon-music icon-2x\\\"></span></div> <div class=\\\"flex-col ellipsis\\\">Just Music</div> <div> <span class=\\\"icon m-btn icon-search icon-2x\\\" v-link=\\\"{ path: '/search' }\\\"></span> <span class=\\\"icon m-btn icon-more icon-2x\\\"></span> </div> </div> </header>\";\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=main-view id=main-view transition=fade-out-left transition-mode=in-out> <music-header></music-header> <play-list :play-list=playList></play-list> </div>\";\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=m-main id=main> <ol class=m-list id=playList v-if=playList> <li class=\\\"m-list-item m-play-item\\\" v-for=\\\"item in playList\\\" data-index=\\\"{{$index + 1}}\\\"> <a href=javascript:; class=\\\"container ratina-bd bd-b\\\" @click=play($index)> <div class=ellipsis>{{item.name}}</div> <div class=\\\"ellipsis sub\\\"> {{item.singer}} - {{item.album||'未知专辑'}} </div> <span class=\\\"icon icon-more icon-lg m-btn\\\" @click.stop.prevent=contextMenu(item)></span> </a> </li> </ol> </div>\";\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"m-player ratina-bd bd-t\\\" id=player v-if=currentSong transition=fade-in-bottom> <div class=container> <div class=\\\"m-pic-s mr-both fl\\\"> <img src=http://placeholder.qiniudn.com/40x40/ccc/fff> </div> <div class=\\\"m-act fr\\\"> <span @click=mode class=\\\"icon icon-lg m-btn\\\" :class=\\\"'icon-mode-' + playMode.list[playMode.index]\\\"></span> <span @click=play class=\\\"icon icon-lg m-btn\\\" :class=\\\"[playState ? 'icon-pause' : 'icon-play']\\\"></span> <span @click=next class=\\\"icon icon-lg m-btn icon-next\\\"></span> </div> <div class=\\\"m-txt oh\\\"> <div class=\\\"song ellipsis\\\">{{currentSong ? currentSong.name : ''}}</div> <div class=\\\"singer ellipsis\\\">{{currentSong ? currentSong.singer : ''}}</div> </div> <audio autoplay v-el:music @play=playStateChange @pause=playStateChange @ended=playEnded @progress=progress @timeupdate=timeupdate> <source type=audio/mpeg :src=currentSong.url v-if=currentSong> </audio> </div> <progress-line :running=running :total=total></progress-line> </div>\";\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"progress-line primary\\\" :style=\\\"{ width: running + '%' }\\\"></div> <div class=progress-line :style=\\\"{ width: total + '%' }\\\"></div>\";\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=m-main> <ul class=m-list id=searchList v-if=searchList> <li class=m-list-item v-for=\\\"item in searchList\\\"> <a href=javascript:; class=\\\"container ratina-bd bd-b\\\" @click=onItemClick(item)> <div class=ellipsis>{{item.name}} - {{item.singer}}</div> </a> </li> </ul> </div>\";\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=search-view id=search-view transition=fade-in-left transition-mode=out-in> <header id=search-hd class=m-hd> <div class=\\\"flex-row container\\\"> <span class=\\\"m-btn icon icon-2x icon-prev\\\" v-link=\\\"{ path: '/' }\\\"></span> <div class=\\\"flex-col mr-both m-key-wrap\\\"> <input type=text class=m-key v-model=key placeholder=\\\"歌名 艺人 专辑\\\"> <span class=\\\"icon icon-search icon-2x m-key-icon\\\" @click=search></span> </div> </div> </header> <search-list :search-list=searchList></search-list> </div>\";\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(55)\n\t__vue_script__ = __webpack_require__(6)\n\t__vue_template__ = __webpack_require__(16)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(7)\n\t__vue_template__ = __webpack_require__(17)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(8)\n\t__vue_template__ = __webpack_require__(18)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(9)\n\t__vue_template__ = __webpack_require__(19)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(10)\n\t__vue_template__ = __webpack_require__(20)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(21)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(22)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(56)\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(23)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Before Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (_.isFunction(request.beforeSend)) {\n\t            request.beforeSend.call(this, request);\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Base client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\tvar xhrClient = __webpack_require__(36);\n\t\n\tmodule.exports = function (request) {\n\t\n\t    var response = (request.client || xhrClient)(request);\n\t\n\t    return Promise.resolve(response).then(function (response) {\n\t\n\t        if (response.headers) {\n\t\n\t            var headers = parseHeaders(response.headers);\n\t\n\t            response.headers = function (name) {\n\t\n\t                if (name) {\n\t                    return headers[_.toLower(name)];\n\t                }\n\t\n\t                return headers;\n\t            };\n\t\n\t        }\n\t\n\t        response.ok = response.status >= 200 && response.status < 300;\n\t\n\t        return response;\n\t    });\n\t\n\t};\n\t\n\tfunction parseHeaders(str) {\n\t\n\t    var headers = {}, value, name, i;\n\t\n\t    if (_.isString(str)) {\n\t        _.each(str.split('\\n'), function (row) {\n\t\n\t            i = row.indexOf(':');\n\t            name = _.trim(_.toLower(row.slice(0, i)));\n\t            value = _.trim(row.slice(i + 1));\n\t\n\t            if (headers[name]) {\n\t\n\t                if (_.isArray(headers[name])) {\n\t                    headers[name].push(value);\n\t                } else {\n\t                    headers[name] = [headers[name], value];\n\t                }\n\t\n\t            } else {\n\t\n\t                headers[name] = value;\n\t            }\n\t\n\t        });\n\t    }\n\t\n\t    return headers;\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\t\n\t        request.params[request.jsonp] = callback;\n\t        request.cancel = function () {\n\t            handler({type: 'cancel'});\n\t        };\n\t\n\t        script = document.createElement('script');\n\t        script.src = _.url(request);\n\t        script.type = 'text/javascript';\n\t        script.async = true;\n\t\n\t        window[callback] = function (data) {\n\t            response.data = data;\n\t        };\n\t\n\t        handler = function (event) {\n\t\n\t            if (event.type === 'load' && response.data !== null) {\n\t                response.status = 200;\n\t            } else if (event.type === 'error') {\n\t                response.status = 404;\n\t            } else {\n\t                response.status = 0;\n\t            }\n\t\n\t            resolve(response);\n\t\n\t            delete window[callback];\n\t            document.body.removeChild(script);\n\t        };\n\t\n\t        script.onload = handler;\n\t        script.onerror = handler;\n\t\n\t        document.body.appendChild(script);\n\t    });\n\t};\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XDomain client (Internet Explorer).\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xdr.abort();\n\t        };\n\t\n\t        xdr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xdr.responseText;\n\t            response.status = xdr.status;\n\t            response.statusText = xdr.statusText;\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xdr.timeout = 0;\n\t        xdr.onload = handler;\n\t        xdr.onabort = handler;\n\t        xdr.onerror = handler;\n\t        xdr.ontimeout = function () {};\n\t        xdr.onprogress = function () {};\n\t\n\t        xdr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * XMLHttp client.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (request) {\n\t    return new Promise(function (resolve) {\n\t\n\t        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\t\n\t        request.cancel = function () {\n\t            xhr.abort();\n\t        };\n\t\n\t        xhr.open(request.method, _.url(request), true);\n\t\n\t        handler = function (event) {\n\t\n\t            response.data = xhr.responseText;\n\t            response.status = xhr.status;\n\t            response.statusText = xhr.statusText;\n\t            response.headers = xhr.getAllResponseHeaders();\n\t\n\t            resolve(response);\n\t        };\n\t\n\t        xhr.timeout = 0;\n\t        xhr.onload = handler;\n\t        xhr.onabort = handler;\n\t        xhr.onerror = handler;\n\t        xhr.ontimeout = function () {};\n\t        xhr.onprogress = function () {};\n\t\n\t        if (_.isPlainObject(request.xhr)) {\n\t            _.extend(xhr, request.xhr);\n\t        }\n\t\n\t        if (_.isPlainObject(request.upload)) {\n\t            _.extend(xhr.upload, request.upload);\n\t        }\n\t\n\t        _.each(request.headers || {}, function (value, header) {\n\t            xhr.setRequestHeader(header, value);\n\t        });\n\t\n\t        xhr.send(request.data);\n\t    });\n\t};\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * CORS Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar xdrClient = __webpack_require__(35);\n\tvar xhrCors = 'withCredentials' in new XMLHttpRequest();\n\tvar originUrl = _.url.parse(location.href);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.crossOrigin === null) {\n\t            request.crossOrigin = crossOrigin(request);\n\t        }\n\t\n\t        if (request.crossOrigin) {\n\t\n\t            if (!xhrCors) {\n\t                request.client = xdrClient;\n\t            }\n\t\n\t            request.emulateHTTP = false;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\t\n\tfunction crossOrigin(request) {\n\t\n\t    var requestUrl = _.url.parse(_.url(request));\n\t\n\t    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Header Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        request.method = request.method.toUpperCase();\n\t        request.headers = _.extend({}, _.http.headers.common,\n\t            !request.crossOrigin ? _.http.headers.custom : {},\n\t            _.http.headers[request.method.toLowerCase()],\n\t            request.headers\n\t        );\n\t\n\t        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n\t            _.extend(request.params, request.data);\n\t            delete request.data;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for sending network requests.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Client = __webpack_require__(33);\n\tvar Promise = __webpack_require__(2);\n\tvar interceptor = __webpack_require__(40);\n\tvar jsonType = {'Content-Type': 'application/json'};\n\t\n\tfunction Http(url, options) {\n\t\n\t    var client = Client, request, promise;\n\t\n\t    Http.interceptors.forEach(function (handler) {\n\t        client = interceptor(handler, this.$vm)(client);\n\t    }, this);\n\t\n\t    options = _.isObject(url) ? url : _.extend({url: url}, options);\n\t    request = _.merge({}, Http.options, this.$options, options);\n\t    promise = client(request).bind(this.$vm).then(function (response) {\n\t\n\t        return response.ok ? response : Promise.reject(response);\n\t\n\t    }, function (response) {\n\t\n\t        if (response instanceof Error) {\n\t            _.error(response);\n\t        }\n\t\n\t        return Promise.reject(response);\n\t    });\n\t\n\t    if (request.success) {\n\t        promise.success(request.success);\n\t    }\n\t\n\t    if (request.error) {\n\t        promise.error(request.error);\n\t    }\n\t\n\t    return promise;\n\t}\n\t\n\tHttp.options = {\n\t    method: 'get',\n\t    data: '',\n\t    params: {},\n\t    headers: {},\n\t    xhr: null,\n\t    upload: null,\n\t    jsonp: 'callback',\n\t    beforeSend: null,\n\t    crossOrigin: null,\n\t    emulateHTTP: false,\n\t    emulateJSON: false,\n\t    timeout: 0\n\t};\n\t\n\tHttp.interceptors = [\n\t    __webpack_require__(32),\n\t    __webpack_require__(44),\n\t    __webpack_require__(41),\n\t    __webpack_require__(42),\n\t    __webpack_require__(43),\n\t    __webpack_require__(38),\n\t    __webpack_require__(37)\n\t];\n\t\n\tHttp.headers = {\n\t    put: jsonType,\n\t    post: jsonType,\n\t    patch: jsonType,\n\t    delete: jsonType,\n\t    common: {'Accept': 'application/json, text/plain, */*'},\n\t    custom: {'X-Requested-With': 'XMLHttpRequest'}\n\t};\n\t\n\t['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\t\n\t    Http[method] = function (url, data, success, options) {\n\t\n\t        if (_.isFunction(data)) {\n\t            options = success;\n\t            success = data;\n\t            data = undefined;\n\t        }\n\t\n\t        if (_.isObject(success)) {\n\t            options = success;\n\t            success = undefined;\n\t        }\n\t\n\t        return this(url, _.extend({method: method, data: data, success: success}, options));\n\t    };\n\t});\n\t\n\tmodule.exports = _.http = Http;\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Interceptor factory.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\t\n\tmodule.exports = function (handler, vm) {\n\t\n\t    return function (client) {\n\t\n\t        if (_.isFunction(handler)) {\n\t            handler = handler.call(vm, Promise);\n\t        }\n\t\n\t        return function (request) {\n\t\n\t            if (_.isFunction(handler.request)) {\n\t                request = handler.request.call(vm, request);\n\t            }\n\t\n\t            return when(request, function (request) {\n\t                return when(client(request), function (response) {\n\t\n\t                    if (_.isFunction(handler.response)) {\n\t                        response = handler.response.call(vm, response);\n\t                    }\n\t\n\t                    return response;\n\t                });\n\t            });\n\t        };\n\t    };\n\t};\n\t\n\tfunction when(value, fulfilled, rejected) {\n\t\n\t    var promise = Promise.resolve(value);\n\t\n\t    if (arguments.length < 2) {\n\t        return promise;\n\t    }\n\t\n\t    return promise.then(fulfilled, rejected);\n\t}\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * JSONP Interceptor.\n\t */\n\t\n\tvar jsonpClient = __webpack_require__(34);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.method == 'JSONP') {\n\t            request.client = jsonpClient;\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t/**\n\t * HTTP method override Interceptor.\n\t */\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n\t            request.headers['X-HTTP-Method-Override'] = request.method;\n\t            request.method = 'POST';\n\t        }\n\t\n\t        return request;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Mime Interceptor.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = {\n\t\n\t    request: function (request) {\n\t\n\t        if (request.emulateJSON && _.isPlainObject(request.data)) {\n\t            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n\t            request.data = _.url.params(request.data);\n\t        }\n\t\n\t        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n\t            delete request.headers['Content-Type'];\n\t        }\n\t\n\t        if (_.isPlainObject(request.data)) {\n\t            request.data = JSON.stringify(request.data);\n\t        }\n\t\n\t        return request;\n\t    },\n\t\n\t    response: function (response) {\n\t\n\t        try {\n\t            response.data = JSON.parse(response.data);\n\t        } catch (e) {}\n\t\n\t        return response;\n\t    }\n\t\n\t};\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Timeout Interceptor.\n\t */\n\t\n\tmodule.exports = function () {\n\t\n\t    var timeout;\n\t\n\t    return {\n\t\n\t        request: function (request) {\n\t\n\t            if (request.timeout) {\n\t                timeout = setTimeout(function () {\n\t                    request.cancel();\n\t                }, request.timeout);\n\t            }\n\t\n\t            return request;\n\t        },\n\t\n\t        response: function (response) {\n\t\n\t            clearTimeout(timeout);\n\t\n\t            return response;\n\t        }\n\t\n\t    };\n\t};\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Install plugin.\n\t */\n\t\n\tfunction install(Vue) {\n\t\n\t    var _ = __webpack_require__(1);\n\t\n\t    _.config = Vue.config;\n\t    _.warning = Vue.util.warn;\n\t    _.nextTick = Vue.util.nextTick;\n\t\n\t    Vue.url = __webpack_require__(49);\n\t    Vue.http = __webpack_require__(39);\n\t    Vue.resource = __webpack_require__(48);\n\t    Vue.Promise = __webpack_require__(2);\n\t\n\t    Object.defineProperties(Vue.prototype, {\n\t\n\t        $url: {\n\t            get: function () {\n\t                return _.options(Vue.url, this, this.$options.url);\n\t            }\n\t        },\n\t\n\t        $http: {\n\t            get: function () {\n\t                return _.options(Vue.http, this, this.$options.http);\n\t            }\n\t        },\n\t\n\t        $resource: {\n\t            get: function () {\n\t                return Vue.resource.bind(this);\n\t            }\n\t        },\n\t\n\t        $promise: {\n\t            get: function () {\n\t                return function (executor) {\n\t                    return new Vue.Promise(executor, this);\n\t                }.bind(this);\n\t            }\n\t        }\n\t\n\t    });\n\t}\n\t\n\tif (window.Vue) {\n\t    Vue.use(install);\n\t}\n\t\n\tmodule.exports = install;\n\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tvar RESOLVED = 0;\n\tvar REJECTED = 1;\n\tvar PENDING  = 2;\n\t\n\tfunction Promise(executor) {\n\t\n\t    this.state = PENDING;\n\t    this.value = undefined;\n\t    this.deferred = [];\n\t\n\t    var promise = this;\n\t\n\t    try {\n\t        executor(function (x) {\n\t            promise.resolve(x);\n\t        }, function (r) {\n\t            promise.reject(r);\n\t        });\n\t    } catch (e) {\n\t        promise.reject(e);\n\t    }\n\t}\n\t\n\tPromise.reject = function (r) {\n\t    return new Promise(function (resolve, reject) {\n\t        reject(r);\n\t    });\n\t};\n\t\n\tPromise.resolve = function (x) {\n\t    return new Promise(function (resolve, reject) {\n\t        resolve(x);\n\t    });\n\t};\n\t\n\tPromise.all = function all(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        var count = 0, result = [];\n\t\n\t        if (iterable.length === 0) {\n\t            resolve(result);\n\t        }\n\t\n\t        function resolver(i) {\n\t            return function (x) {\n\t                result[i] = x;\n\t                count += 1;\n\t\n\t                if (count === iterable.length) {\n\t                    resolve(result);\n\t                }\n\t            };\n\t        }\n\t\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolver(i), reject);\n\t        }\n\t    });\n\t};\n\t\n\tPromise.race = function race(iterable) {\n\t    return new Promise(function (resolve, reject) {\n\t        for (var i = 0; i < iterable.length; i += 1) {\n\t            Promise.resolve(iterable[i]).then(resolve, reject);\n\t        }\n\t    });\n\t};\n\t\n\tvar p = Promise.prototype;\n\t\n\tp.resolve = function resolve(x) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (x === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        var called = false;\n\t\n\t        try {\n\t            var then = x && x['then'];\n\t\n\t            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n\t                then.call(x, function (x) {\n\t                    if (!called) {\n\t                        promise.resolve(x);\n\t                    }\n\t                    called = true;\n\t\n\t                }, function (r) {\n\t                    if (!called) {\n\t                        promise.reject(r);\n\t                    }\n\t                    called = true;\n\t                });\n\t                return;\n\t            }\n\t        } catch (e) {\n\t            if (!called) {\n\t                promise.reject(e);\n\t            }\n\t            return;\n\t        }\n\t\n\t        promise.state = RESOLVED;\n\t        promise.value = x;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.reject = function reject(reason) {\n\t    var promise = this;\n\t\n\t    if (promise.state === PENDING) {\n\t        if (reason === promise) {\n\t            throw new TypeError('Promise settled with itself.');\n\t        }\n\t\n\t        promise.state = REJECTED;\n\t        promise.value = reason;\n\t        promise.notify();\n\t    }\n\t};\n\t\n\tp.notify = function notify() {\n\t    var promise = this;\n\t\n\t    _.nextTick(function () {\n\t        if (promise.state !== PENDING) {\n\t            while (promise.deferred.length) {\n\t                var deferred = promise.deferred.shift(),\n\t                    onResolved = deferred[0],\n\t                    onRejected = deferred[1],\n\t                    resolve = deferred[2],\n\t                    reject = deferred[3];\n\t\n\t                try {\n\t                    if (promise.state === RESOLVED) {\n\t                        if (typeof onResolved === 'function') {\n\t                            resolve(onResolved.call(undefined, promise.value));\n\t                        } else {\n\t                            resolve(promise.value);\n\t                        }\n\t                    } else if (promise.state === REJECTED) {\n\t                        if (typeof onRejected === 'function') {\n\t                            resolve(onRejected.call(undefined, promise.value));\n\t                        } else {\n\t                            reject(promise.value);\n\t                        }\n\t                    }\n\t                } catch (e) {\n\t                    reject(e);\n\t                }\n\t            }\n\t        }\n\t    });\n\t};\n\t\n\tp.then = function then(onResolved, onRejected) {\n\t    var promise = this;\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n\t        promise.notify();\n\t    });\n\t};\n\t\n\tp.catch = function (onRejected) {\n\t    return this.then(undefined, onRejected);\n\t};\n\t\n\tmodule.exports = Promise;\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\t/**\n\t * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n\t */\n\t\n\texports.expand = function (url, params, variables) {\n\t\n\t    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\t\n\t    if (variables) {\n\t        variables.push.apply(variables, tmpl.vars);\n\t    }\n\t\n\t    return expanded;\n\t};\n\t\n\texports.parse = function (template) {\n\t\n\t    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\t\n\t    return {\n\t        vars: variables,\n\t        expand: function (context) {\n\t            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n\t                if (expression) {\n\t\n\t                    var operator = null, values = [];\n\t\n\t                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n\t                        operator = expression.charAt(0);\n\t                        expression = expression.substr(1);\n\t                    }\n\t\n\t                    expression.split(/,/g).forEach(function (variable) {\n\t                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n\t                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n\t                        variables.push(tmp[1]);\n\t                    });\n\t\n\t                    if (operator && operator !== '+') {\n\t\n\t                        var separator = ',';\n\t\n\t                        if (operator === '?') {\n\t                            separator = '&';\n\t                        } else if (operator !== '#') {\n\t                            separator = operator;\n\t                        }\n\t\n\t                        return (values.length !== 0 ? operator : '') + values.join(separator);\n\t                    } else {\n\t                        return values.join(',');\n\t                    }\n\t\n\t                } else {\n\t                    return exports.encodeReserved(literal);\n\t                }\n\t            });\n\t        }\n\t    };\n\t};\n\t\n\texports.getValues = function (context, operator, key, modifier) {\n\t\n\t    var value = context[key], result = [];\n\t\n\t    if (this.isDefined(value) && value !== '') {\n\t        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n\t            value = value.toString();\n\t\n\t            if (modifier && modifier !== '*') {\n\t                value = value.substring(0, parseInt(modifier, 10));\n\t            }\n\t\n\t            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t        } else {\n\t            if (modifier === '*') {\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            result.push(this.encodeValue(operator, value[k], k));\n\t                        }\n\t                    }, this);\n\t                }\n\t            } else {\n\t                var tmp = [];\n\t\n\t                if (Array.isArray(value)) {\n\t                    value.filter(this.isDefined).forEach(function (value) {\n\t                        tmp.push(this.encodeValue(operator, value));\n\t                    }, this);\n\t                } else {\n\t                    Object.keys(value).forEach(function (k) {\n\t                        if (this.isDefined(value[k])) {\n\t                            tmp.push(encodeURIComponent(k));\n\t                            tmp.push(this.encodeValue(operator, value[k].toString()));\n\t                        }\n\t                    }, this);\n\t                }\n\t\n\t                if (this.isKeyOperator(operator)) {\n\t                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n\t                } else if (tmp.length !== 0) {\n\t                    result.push(tmp.join(','));\n\t                }\n\t            }\n\t        }\n\t    } else {\n\t        if (operator === ';') {\n\t            result.push(encodeURIComponent(key));\n\t        } else if (value === '' && (operator === '&' || operator === '?')) {\n\t            result.push(encodeURIComponent(key) + '=');\n\t        } else if (value === '') {\n\t            result.push('');\n\t        }\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\texports.isDefined = function (value) {\n\t    return value !== undefined && value !== null;\n\t};\n\t\n\texports.isKeyOperator = function (operator) {\n\t    return operator === ';' || operator === '&' || operator === '?';\n\t};\n\t\n\texports.encodeValue = function (operator, value, key) {\n\t\n\t    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\t\n\t    if (key) {\n\t        return encodeURIComponent(key) + '=' + value;\n\t    } else {\n\t        return value;\n\t    }\n\t};\n\t\n\texports.encodeReserved = function (str) {\n\t    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n\t        if (!/%[0-9A-Fa-f]/.test(part)) {\n\t            part = encodeURI(part);\n\t        }\n\t        return part;\n\t    }).join('');\n\t};\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for interacting with RESTful services.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tfunction Resource(url, params, actions, options) {\n\t\n\t    var self = this, resource = {};\n\t\n\t    actions = _.extend({},\n\t        Resource.actions,\n\t        actions\n\t    );\n\t\n\t    _.each(actions, function (action, name) {\n\t\n\t        action = _.merge({url: url, params: params || {}}, options, action);\n\t\n\t        resource[name] = function () {\n\t            return (self.$http || _.http)(opts(action, arguments));\n\t        };\n\t    });\n\t\n\t    return resource;\n\t}\n\t\n\tfunction opts(action, args) {\n\t\n\t    var options = _.extend({}, action), params = {}, data, success, error;\n\t\n\t    switch (args.length) {\n\t\n\t        case 4:\n\t\n\t            error = args[3];\n\t            success = args[2];\n\t\n\t        case 3:\n\t        case 2:\n\t\n\t            if (_.isFunction(args[1])) {\n\t\n\t                if (_.isFunction(args[0])) {\n\t\n\t                    success = args[0];\n\t                    error = args[1];\n\t\n\t                    break;\n\t                }\n\t\n\t                success = args[1];\n\t                error = args[2];\n\t\n\t            } else {\n\t\n\t                params = args[0];\n\t                data = args[1];\n\t                success = args[2];\n\t\n\t                break;\n\t            }\n\t\n\t        case 1:\n\t\n\t            if (_.isFunction(args[0])) {\n\t                success = args[0];\n\t            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n\t                data = args[0];\n\t            } else {\n\t                params = args[0];\n\t            }\n\t\n\t            break;\n\t\n\t        case 0:\n\t\n\t            break;\n\t\n\t        default:\n\t\n\t            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n\t    }\n\t\n\t    options.data = data;\n\t    options.params = _.extend({}, options.params, params);\n\t\n\t    if (success) {\n\t        options.success = success;\n\t    }\n\t\n\t    if (error) {\n\t        options.error = error;\n\t    }\n\t\n\t    return options;\n\t}\n\t\n\tResource.actions = {\n\t\n\t    get: {method: 'GET'},\n\t    save: {method: 'POST'},\n\t    query: {method: 'GET'},\n\t    update: {method: 'PUT'},\n\t    remove: {method: 'DELETE'},\n\t    delete: {method: 'DELETE'}\n\t\n\t};\n\t\n\tmodule.exports = _.resource = Resource;\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Service for URL templating.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\tvar ie = document.documentMode;\n\tvar el = document.createElement('a');\n\t\n\tfunction Url(url, params) {\n\t\n\t    var options = url, transform;\n\t\n\t    if (_.isString(url)) {\n\t        options = {url: url, params: params};\n\t    }\n\t\n\t    options = _.merge({}, Url.options, this.$options, options);\n\t\n\t    Url.transforms.forEach(function (handler) {\n\t        transform = factory(handler, transform, this.$vm);\n\t    }, this);\n\t\n\t    return transform(options);\n\t};\n\t\n\t/**\n\t * Url options.\n\t */\n\t\n\tUrl.options = {\n\t    url: '',\n\t    root: null,\n\t    params: {}\n\t};\n\t\n\t/**\n\t * Url transforms.\n\t */\n\t\n\tUrl.transforms = [\n\t    __webpack_require__(53),\n\t    __webpack_require__(50),\n\t    __webpack_require__(51),\n\t    __webpack_require__(52)\n\t];\n\t\n\t/**\n\t * Encodes a Url parameter string.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tUrl.params = function (obj) {\n\t\n\t    var params = [], escape = encodeURIComponent;\n\t\n\t    params.add = function (key, value) {\n\t\n\t        if (_.isFunction(value)) {\n\t            value = value();\n\t        }\n\t\n\t        if (value === null) {\n\t            value = '';\n\t        }\n\t\n\t        this.push(escape(key) + '=' + escape(value));\n\t    };\n\t\n\t    serialize(params, obj);\n\t\n\t    return params.join('&').replace(/%20/g, '+');\n\t};\n\t\n\t/**\n\t * Parse a URL and return its components.\n\t *\n\t * @param {String} url\n\t */\n\t\n\tUrl.parse = function (url) {\n\t\n\t    if (ie) {\n\t        el.href = url;\n\t        url = el.href;\n\t    }\n\t\n\t    el.href = url;\n\t\n\t    return {\n\t        href: el.href,\n\t        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n\t        port: el.port,\n\t        host: el.host,\n\t        hostname: el.hostname,\n\t        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n\t        search: el.search ? el.search.replace(/^\\?/, '') : '',\n\t        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n\t    };\n\t};\n\t\n\tfunction factory(handler, next, vm) {\n\t    return function (options) {\n\t        return handler.call(vm, options, next);\n\t    };\n\t}\n\t\n\tfunction serialize(params, obj, scope) {\n\t\n\t    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\t\n\t    _.each(obj, function (value, key) {\n\t\n\t        hash = _.isObject(value) || _.isArray(value);\n\t\n\t        if (scope) {\n\t            key = scope + '[' + (plain || hash ? key : '') + ']';\n\t        }\n\t\n\t        if (!scope && array) {\n\t            params.add(value.name, value.value);\n\t        } else if (hash) {\n\t            serialize(params, value, key);\n\t        } else {\n\t            params.add(key, value);\n\t        }\n\t    });\n\t}\n\t\n\tmodule.exports = _.url = Url;\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Legacy Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var variables = [], url = next(options);\n\t\n\t    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\t\n\t        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\t\n\t        if (options.params[name]) {\n\t            variables.push(name);\n\t            return slash + encodeUriSegment(options.params[name]);\n\t        }\n\t\n\t        return '';\n\t    });\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\t\n\tfunction encodeUriSegment(value) {\n\t\n\t    return encodeUriQuery(value, true).\n\t        replace(/%26/gi, '&').\n\t        replace(/%3D/gi, '=').\n\t        replace(/%2B/gi, '+');\n\t}\n\t\n\tfunction encodeUriQuery(value, spaces) {\n\t\n\t    return encodeURIComponent(value).\n\t        replace(/%40/gi, '@').\n\t        replace(/%3A/gi, ':').\n\t        replace(/%24/g, '$').\n\t        replace(/%2C/gi, ',').\n\t        replace(/%20/g, (spaces ? '%20' : '+'));\n\t}\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Query Parameter Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\t\n\t   _.each(options.params, function (value, key) {\n\t        if (urlParams.indexOf(key) === -1) {\n\t            query[key] = value;\n\t        }\n\t    });\n\t\n\t    query = _.url.params(query);\n\t\n\t    if (query) {\n\t        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Root Prefix Transform.\n\t */\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\tmodule.exports = function (options, next) {\n\t\n\t    var url = next(options);\n\t\n\t    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n\t        url = options.root + '/' + url;\n\t    }\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * URL Template (RFC 6570) Transform.\n\t */\n\t\n\tvar UrlTemplate = __webpack_require__(47);\n\t\n\tmodule.exports = function (options) {\n\t\n\t    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\t\n\t    variables.forEach(function (key) {\n\t        delete options.params[key];\n\t    });\n\t\n\t    return url;\n\t};\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(14);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(15);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(4)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.6a3aacbc34d2fec82b4a.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b44561e2fdab89a09f45\n **/","var Vue = require('Vue');\r\nvar VueRouter = require('vue-router');\r\nvar App = require('./components/App');\r\nvar Search = require('./components/SearchView');\r\nvar Main = require('./components/MainView');\r\n\r\nVue.use(require('vue-resource'));\r\nVue.use(VueRouter);\r\n\r\nvar router = new VueRouter({\r\n    transitionOnLoad: true\r\n});\r\n\r\nrouter.map({\r\n    '/': {\r\n        component: Main\r\n    },\r\n    '/search': {\r\n        component: Search\r\n    }\r\n});\r\n\r\nrouter.start(App, '#app');\r\n\r\n\r\n// new Vue({\r\n//     el: 'app',\r\n//     components: {\r\n//         app: App\r\n//     }\r\n// });\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","/**\n * Utility functions.\n */\n\nvar _ = exports, array = [], console = window.console;\n\n_.warn = function (msg) {\n    if (console && _.warning && (!_.config.silent || _.config.debug)) {\n        console.warn('[VueResource warn]: ' + msg);\n    }\n};\n\n_.error = function (msg) {\n    if (console) {\n        console.error(msg);\n    }\n};\n\n_.trim = function (str) {\n    return str.replace(/^\\s*|\\s*$/g, '');\n};\n\n_.toLower = function (str) {\n    return str ? str.toLowerCase() : '';\n};\n\n_.isArray = Array.isArray;\n\n_.isString = function (val) {\n    return typeof val === 'string';\n};\n\n_.isFunction = function (val) {\n    return typeof val === 'function';\n};\n\n_.isObject = function (obj) {\n    return obj !== null && typeof obj === 'object';\n};\n\n_.isPlainObject = function (obj) {\n    return _.isObject(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n};\n\n_.options = function (fn, obj, options) {\n\n    options = options || {};\n\n    if (_.isFunction(options)) {\n        options = options.call(obj);\n    }\n\n    return _.merge(fn.bind({$vm: obj, $options: options}), fn, {$options: options});\n};\n\n_.each = function (obj, iterator) {\n\n    var i, key;\n\n    if (typeof obj.length == 'number') {\n        for (i = 0; i < obj.length; i++) {\n            iterator.call(obj[i], obj[i], i);\n        }\n    } else if (_.isObject(obj)) {\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                iterator.call(obj[key], obj[key], key);\n            }\n        }\n    }\n\n    return obj;\n};\n\n_.defaults = function (target, source) {\n\n    for (var key in source) {\n        if (target[key] === undefined) {\n            target[key] = source[key];\n        }\n    }\n\n    return target;\n};\n\n_.extend = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg);\n    });\n\n    return target;\n};\n\n_.merge = function (target) {\n\n    var args = array.slice.call(arguments, 1);\n\n    args.forEach(function (arg) {\n        merge(target, arg, true);\n    });\n\n    return target;\n};\n\nfunction merge(target, source, deep) {\n    for (var key in source) {\n        if (deep && (_.isPlainObject(source[key]) || _.isArray(source[key]))) {\n            if (_.isPlainObject(source[key]) && !_.isPlainObject(target[key])) {\n                target[key] = {};\n            }\n            if (_.isArray(source[key]) && !_.isArray(target[key])) {\n                target[key] = [];\n            }\n            merge(target[key], source[key], deep);\n        } else if (source[key] !== undefined) {\n            target[key] = source[key];\n        }\n    }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/util.js\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * Promise adapter.\n */\n\nvar _ = require('./util');\nvar PromiseObj = window.Promise || require('./lib/promise');\n\nfunction Promise(executor, context) {\n\n    if (executor instanceof PromiseObj) {\n        this.promise = executor;\n    } else {\n        this.promise = new PromiseObj(executor.bind(context));\n    }\n\n    this.context = context;\n}\n\nPromise.all = function (iterable, context) {\n    return new Promise(PromiseObj.all(iterable), context);\n};\n\nPromise.resolve = function (value, context) {\n    return new Promise(PromiseObj.resolve(value), context);\n};\n\nPromise.reject = function (reason, context) {\n    return new Promise(PromiseObj.reject(reason), context);\n};\n\nPromise.race = function (iterable, context) {\n    return new Promise(PromiseObj.race(iterable), context);\n};\n\nvar p = Promise.prototype;\n\np.bind = function (context) {\n    this.context = context;\n    return this;\n};\n\np.then = function (fulfilled, rejected) {\n\n    if (fulfilled && fulfilled.bind && this.context) {\n        fulfilled = fulfilled.bind(this.context);\n    }\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.then(fulfilled, rejected);\n\n    return this;\n};\n\np.catch = function (rejected) {\n\n    if (rejected && rejected.bind && this.context) {\n        rejected = rejected.bind(this.context);\n    }\n\n    this.promise = this.promise.catch(rejected);\n\n    return this;\n};\n\np.finally = function (callback) {\n\n    return this.then(function (value) {\n            callback.call(this);\n            return value;\n        }, function (reason) {\n            callback.call(this);\n            return PromiseObj.reject(reason);\n        }\n    );\n};\n\np.success = function (callback) {\n\n    _.warn('The `success` method has been deprecated. Use the `then` method instead.');\n\n    return this.then(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.error = function (callback) {\n\n    _.warn('The `error` method has been deprecated. Use the `catch` method instead.');\n\n    return this.catch(function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    });\n};\n\np.always = function (callback) {\n\n    _.warn('The `always` method has been deprecated. Use the `finally` method instead.');\n\n    var cb = function (response) {\n        return callback.call(this, response.data, response.status, response) || response;\n    };\n\n    return this.then(cb, cb);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/promise.js\n ** module id = 2\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 3\n ** module chunks = 0\n **/","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nvar stylesInDom = {},\n\tmemoize = function(fn) {\n\t\tvar memo;\n\t\treturn function () {\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\t\treturn memo;\n\t\t};\n\t},\n\tisOldIE = memoize(function() {\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\n\t}),\n\tgetHeadElement = memoize(function () {\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\n\t}),\n\tsingletonElement = null,\n\tsingletonCounter = 0,\n\tstyleElementsInsertedAtTop = [];\n\nmodule.exports = function(list, options) {\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the bottom of <head>.\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list);\n\taddStylesToDom(styles, options);\n\n\treturn function update(newList) {\n\t\tvar mayRemove = [];\n\t\tfor(var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\n\t\t\t\t\tdomStyle.parts[j]();\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction addStylesToDom(styles, options) {\n\tfor(var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles(list) {\n\tvar styles = [];\n\tvar newStyles = {};\n\tfor(var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\t\tif(!newStyles[id])\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse\n\t\t\tnewStyles[id].parts.push(part);\n\t}\n\treturn styles;\n}\n\nfunction insertStyleElement(options, styleElement) {\n\tvar head = getHeadElement();\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\n\tif (options.insertAt === \"top\") {\n\t\tif(!lastStyleElementInsertedAtTop) {\n\t\t\thead.insertBefore(styleElement, head.firstChild);\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\thead.appendChild(styleElement);\n\t\t}\n\t\tstyleElementsInsertedAtTop.push(styleElement);\n\t} else if (options.insertAt === \"bottom\") {\n\t\thead.appendChild(styleElement);\n\t} else {\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n\t}\n}\n\nfunction removeStyleElement(styleElement) {\n\tstyleElement.parentNode.removeChild(styleElement);\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\n\tif(idx >= 0) {\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement(options) {\n\tvar styleElement = document.createElement(\"style\");\n\tstyleElement.type = \"text/css\";\n\tinsertStyleElement(options, styleElement);\n\treturn styleElement;\n}\n\nfunction addStyle(obj, options) {\n\tvar styleElement, update, remove;\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\n\t} else {\n\t\tstyleElement = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, styleElement);\n\t\tremove = function() {\n\t\t\tremoveStyleElement(styleElement);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle(newObj) {\n\t\tif(newObj) {\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\n\t\t\t\treturn;\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = styleElement.childNodes;\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\n\t\tif (childNodes.length) {\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyleElement.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag(styleElement, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\tvar sourceMap = obj.sourceMap;\n\n\tif (media) {\n\t\tstyleElement.setAttribute(\"media\", media);\n\t}\n\n\tif (sourceMap) {\n\t\t// https://developer.chrome.com/devtools/docs/javascript-debugging\n\t\t// this makes source maps inside style tags work properly in Chrome\n\t\tcss += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */';\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tif (styleElement.styleSheet) {\n\t\tstyleElement.styleSheet.cssText = css;\n\t} else {\n\t\twhile(styleElement.firstChild) {\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\n\t\t}\n\t\tstyleElement.appendChild(document.createTextNode(css));\n\t}\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader/addStyles.js\n ** module id = 4\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.20\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (!key) continue;\n        if (isPlainObject(key)) {\n          var keys = Object.keys(key);\n          for (var k = 0; k < keys.length; k++) {\n            removeClass(this.el, keys[k]);\n          }\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (obj[key]) {\n      addClass(el, key);\n    }\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n    var isSimple = isSimplePath(parentKey);\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        if (isSimple) {\n          withoutConversion(function () {\n            child[childKey] = val;\n          });\n        } else {\n          child[childKey] = val;\n        }\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    var value = parentWatcher.value;\n    if (isSimple && value !== undefined) {\n      withoutConversion(function () {\n        initProp(child, prop, value);\n      });\n    } else {\n      initProp(child, prop, value);\n    }\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.');\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.');\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(factory, 'component', value);\n      }\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.20';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/Vue/dist/vue.common.js\n ** module id = 5\n ** module chunks = 0\n **/","<style lang=\"less\">\r\n@import '../less/style';\r\n</style>\r\n<template>\r\n    <div id=\"app\">\r\n        <router-view :play-list=\"playList\"></router-view>\r\n        <music-ctrl :song-index=\"songIndex\" :play-list=\"playList\"></music-ctrl>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nvar Player = require('./Player');\r\n\r\nmodule.exports = {\r\n    components: {\r\n        'music-ctrl': Player\r\n    },\r\n    data: function () {\r\n        return {\r\n            playList: [],\r\n            songIndex: 0\r\n        }\r\n    },\r\n    methods: {\r\n        pushSong: function (song) {\r\n            // 过滤：不添加已存在的项\r\n            var index = 0;\r\n            !this.playList.some(function (item, i) {\r\n                index = i;\r\n                return item.id === song.id;\r\n            }) && (this.playList.push(song), this.songIndex = index);\r\n        }\r\n    },\r\n    events: {\r\n        'add-song': function (song) {\r\n            this.pushSong(song);\r\n            console.log(this.playList)\r\n        },\r\n        'cut-song': function(index) {\r\n            console.log('cut:' + index);\r\n            // this.songIndex = index;\r\n            this.$broadcast('cut-play', index);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n</script>\r\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?5b24ca9f\n **/","<template>\r\n    <header id=\"m-hd\" class=\"m-hd\">\r\n        <div class=\"flex-row container\">\r\n            <div class=\"m-logo mr-both\"><span class=\"icon icon-music icon-2x\"></span></div>\r\n            <div class=\"flex-col ellipsis\">Just Music</div>\r\n            <div>\r\n                <span class=\"icon m-btn icon-search icon-2x\" v-link=\"{ path: '/search' }\"></span>\r\n                <span class=\"icon m-btn icon-more icon-2x\"></span>\r\n            </div>\r\n        </div>\r\n    </header>\r\n</template>\r\n\r\n<script>\r\nmodule.exports = {\r\n    data: function () {\r\n        return {\r\n            key: '曾经的你'\r\n        }\r\n    },\r\n    methods: {\r\n        search: function () {\r\n\r\n            if(!this.key.trim()) {\r\n                return;\r\n            }\r\n\r\n            console.log(this.key);\r\n\r\n            this.$http.get('/search/' + this.key + '/1').then(function(res){\r\n\r\n                this.$dispatch('fetch-list', res.data.list);\r\n\r\n            }, function (res) {\r\n                console.error('error: ' + res.status);\r\n            });\r\n        }\r\n    }\r\n};\r\n</script>\r\n\n\n\n/** WEBPACK FOOTER **\n ** Header.vue?31f69949\n **/","<template>\r\n    <div class=\"main-view\" id=\"main-view\" transition=\"fade-out-left\" transition-mode=\"in-out\">\r\n        <music-header></music-header>\r\n        <play-list :play-list=\"playList\" ></play-list>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nvar Header = require('./Header');\r\nvar List = require('./PlayList');\r\n\r\nmodule.exports = {\r\n    components: {\r\n        'music-header': Header,\r\n        'play-list': List\r\n    },\r\n    props: {\r\n        playList: Array\r\n    },\r\n    methods: {\r\n\r\n    }\r\n\r\n};\r\n\r\n</script>\r\n\n\n\n/** WEBPACK FOOTER **\n ** MainView.vue?2976b682\n **/","<template>\r\n    <div class=\"m-main\" id=\"main\">\r\n        <ol class=\"m-list\" id=\"playList\" v-if=\"playList\">\r\n            <li class=\"m-list-item m-play-item\" v-for=\"item in playList\" data-index=\"{{$index + 1}}\">\r\n                <a href=\"javascript:;\" class=\"container ratina-bd bd-b\" @click=\"play($index)\">\r\n                    <div class=\"ellipsis\">{{item.name}}</div>\r\n                    <div class=\"ellipsis sub\">\r\n                        {{item.singer}} - {{item.album||'未知专辑'}}\r\n                    </div>\r\n                    <span class=\"icon icon-more icon-lg m-btn\" @click.stop.prevent=\"contextMenu(item)\"></span>\r\n                </a>\r\n            </li>\r\n        </ol>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\nmodule.exports = {\r\n    props: {\r\n        playList: Array\r\n    },\r\n    methods: {\r\n        play: function (index) {\r\n            this.$dispatch('cut-song', index);\r\n        },\r\n        contextMenu: function (item) {\r\n            console.log('more')\r\n        }\r\n    }\r\n};\r\n</script>\r\n\n\n\n/** WEBPACK FOOTER **\n ** PlayList.vue?05d050a6\n **/","<template>\r\n    <div class=\"m-player ratina-bd bd-t\" id=\"player\" v-if=\"currentSong\" transition=\"fade-in-bottom\">\r\n        <div class=\"container\">\r\n            <div class=\"m-pic-s mr-both fl\">\r\n                <img src=\"http://placeholder.qiniudn.com/40x40/ccc/fff\">\r\n            </div>\r\n            <div class=\"m-act fr\">\r\n                <span @click=\"mode\" class=\"icon icon-lg m-btn\" :class=\"'icon-mode-' + playMode.list[playMode.index]\"></span>\r\n                <span @click=\"play\" class=\"icon icon-lg m-btn\" :class=\"[playState ? 'icon-pause' : 'icon-play']\"></span>\r\n                <span @click=\"next\" class=\"icon icon-lg m-btn icon-next \"></span>\r\n            </div>\r\n            <div class=\"m-txt oh\">\r\n                <div class=\"song ellipsis\">{{currentSong ? currentSong.name : ''}}</div>\r\n                <div class=\"singer ellipsis\">{{currentSong ? currentSong.singer : ''}}</div>\r\n            </div>\r\n            \r\n            <audio autoplay v-el:music  @play=\"playStateChange\" @pause=\"playStateChange\" @ended=\"playEnded\"  @progress=\"progress\" @timeupdate=\"timeupdate\">\r\n              <source type=\"audio/mpeg\" :src=\"currentSong.url\" v-if=\"currentSong\">\r\n            </audio>\r\n        </div>\r\n        <progress-line :running=\"running\" :total=\"total\"></progress-line>\r\n    </div>\r\n</template>\r\n<script>\r\nvar ProgressLine = require('./ProgressLine');\r\n\r\nmodule.exports = {\r\n    data: function(){\r\n        return {\r\n            playState: false,\r\n            playMode: {\r\n                index: 0,\r\n                list: ['loop', 'single', 'random']\r\n            },\r\n            running: 0,\r\n            total: 0\r\n        }\r\n    },\r\n    components: {\r\n        'progress-line': ProgressLine\r\n    },\r\n    props: {\r\n        songIndex: Number,\r\n        playList: Array\r\n    },\r\n    methods: {\r\n        play: function () {\r\n            // play or pause\r\n            this.playState = !this.playState;\r\n            (this.playList[this.songIndex] && this.playState) ? this.$els.music.play() : this.$els.music.pause();\r\n        },\r\n        next: function () {\r\n            // next\r\n            // 根据 playMode 切换下一首\r\n            var len = this.playList.length,\r\n                index = this.songIndex;\r\n\r\n            // 取消循环播放\r\n            this.$els.music.loop = false;\r\n\r\n            switch(this.playMode.index) {\r\n                case 0:\r\n                    // 顺序\r\n                    index = this.songIndex + 1 === len ? 0 : this.songIndex + 1;\r\n                    break;\r\n                case 2:\r\n                    // 随机\r\n                    index = Math.floor((Math.random() * (len - 1)) + 1);\r\n                    break;\r\n                default:\r\n                    // 单曲循环\r\n                    this.$els.music.loop = true;\r\n                    break;\r\n            }\r\n            console.log('playIndex:' + index)\r\n            this.playByIndex(index);\r\n            \r\n        },\r\n        mode: function () {\r\n            // playMode\r\n            var cur = this.playMode.index,\r\n                len = this.playMode.list.length;\r\n            this.playMode.index = cur + 1 === len ? 0 : cur + 1;\r\n        },\r\n        playEnded: function () {\r\n            // 播放结束直接调用下一首\r\n            console.log('next');\r\n            this.next();\r\n        },\r\n        playStateChange: function () {\r\n            // 播放状态改变\r\n            this.playState = !this.$els.music.paused;\r\n        },\r\n        progress: function () {\r\n            // 缓冲\r\n            // buffered 已缓冲长度\r\n            // duration 资源长度\r\n            var $music = this.$els.music,\r\n                buffered = $music.buffered;\r\n            \r\n            if(!buffered.length) return;\r\n            \r\n            this.total = Math.round(buffered.end(buffered.length - 1) / $music.duration * 100);\r\n\r\n        },\r\n        timeupdate: function () {\r\n            // 播放中\r\n            // played 已播放长度\r\n            var $music = this.$els.music;\r\n            this.running = Math.round($music.currentTime / $music.duration * 100);\r\n        },\r\n        playByIndex: function(index) {\r\n            this.songIndex = index;\r\n            this.$els.music.src = this.playList[this.songIndex].url;\r\n        }\r\n    },\r\n    computed: {\r\n        songUrl: {\r\n            get: function () {\r\n                return this.song.url;\r\n            },\r\n            set: function (song) {\r\n                this.song = song;\r\n            }\r\n        },\r\n        currentSong: function() {\r\n            return this.playList[this.songIndex];\r\n        }\r\n    },\r\n    events: {\r\n        'cut-play': function(index) {\r\n            this.playIndex !== index && this.playByIndex(index);\r\n        }\r\n    }\r\n};\r\n</script>\r\n\n\n\n/** WEBPACK FOOTER **\n ** Player.vue?1cf5da83\n **/","<template>\n    <div class=\"progress-line primary\" :style=\"{ width: running + '%' }\"></div>\n    <div class=\"progress-line\" :style=\"{ width: total + '%' }\"></div>\n</template>\n<script>\nmodule.exports = {\n    props: {\n        running: Number,\n        total: Number\n    }\n};\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** ProgressLine.vue?3ee46bf2\n **/","<template>\n    <div class=\"m-main\">\n        <ul class=\"m-list\" id=\"searchList\" v-if=\"searchList\">\n            <li class=\"m-list-item\" v-for=\"item in searchList\" >\n                <a href=\"javascript:;\" class=\"container ratina-bd bd-b\" @click=\"onItemClick(item)\">\n                    <div class=\"ellipsis\">{{item.name}} - {{item.singer}}</div>\n                </a>\n            </li>\n        </ul>\n    </div>\n</template>\n<script>\n\nmodule.exports = {\n\n    props: {\n        searchList: Array\n    },\n    methods: {\n        onItemClick: function (item) {\n            this.$http.get('/song/' + item.id).then(function (res) {\n                console.log('url:' + res.data);\n                item.url = res.data;\n                this.$dispatch('add-song', item);\n\n            }, function (res) {\n                console.error('error: ' + res.status);\n            });\n\n        }\n    }\n};\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** SearchList.vue?7232f5ac\n **/","<style>\n    .search-view {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        max-height: 100%;\n        background: #fff;\n        z-index: 12;\n    }\n</style>\n<template>\n    <div class=\"search-view\" id=\"search-view\" transition=\"fade-in-left\" transition-mode=\"out-in\">\n        <header id=\"search-hd\" class=\"m-hd\">\n            <div class=\"flex-row container\">\n                <span class=\"m-btn icon icon-2x icon-prev\" v-link=\"{ path: '/' }\"></span>\n                <div class=\"flex-col mr-both m-key-wrap\">\n\n                    <input type=\"text\" class=\"m-key\" v-model=\"key\" placeholder=\"歌名 艺人 专辑\">\n                    <span class=\"icon icon-search icon-2x m-key-icon\" @click=\"search\"></span>\n                </div>\n                <!-- <button type=\"button\" class=\"m-btn\" @click=\"search\">搜索</button> -->\n            </div>\n        </header>\n        <search-list :search-list=\"searchList\"></search-list>\n    </div>\n\n</template>\n\n<script>\nvar List = require('./SearchList');\n\nmodule.exports = {\n    data: function () {\n        return {\n            key: '曾经的你',\n            searchList: []\n        }\n    },\n    components: {\n        'search-list': List\n    },\n    methods: {\n        search: function () {\n\n            if(!this.key.trim()) {\n                return;\n            }\n\n            console.log(this.key);\n\n            this.$http.get('/search/' + this.key + '/1').then(function(res){\n\n                this.searchList = res.data.list;\n\n            }, function (res) {\n                console.error('error: ' + res.status);\n            });\n        }\n    }\n};\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** SearchView.vue?3e53afb0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html{width:100%;max-height:100%;background-color:#fff;color:#212121;font-size:100px;overflow:hidden}::-webkit-scrollbar{display:none}*,:after,:before{box-sizing:border-box}body{-webkit-tap-highlight-color:rgba(255,255,255,0)}body,button,input,option,select,textarea{font:normal .14em Microsoft YaHei,helvetica neue,tahoma,sans-serif}blockquote,body,button,dd,dl,figure,h1,h2,h3,h4,h5,h6,input,p,pre{margin:0}button,input,legend,textarea{padding:0}fieldset,form,ol,td,th,ul{margin:0;padding:0}li,ol,ul{list-style:none}a{color:inherit;text-decoration:none}article,p{max-height:100%}img{width:100%;max-width:100%;border:none}address,em,i{font-style:normal}input[type=button],input[type=reset],input[type=search],input[type=submit]{-webkit-appearance:button}button:focus,input:focus,select:focus,textarea:focus{outline:none}textarea{resize:none}.fl{float:left}.fr{float:right}.oh{overflow:hidden}.tr{text-align:right}.tc{text-align:center}.clearfix:after,.row:after{content:\\\"\\\";display:table;clear:both;overflow:hidden}.ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.flex-row,.flex-row-vertical{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.flex-row-vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.flex-row-wrap{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.flex-row-reverse{-webkit-box-orient:horizontal;-webkit-box-direction:reverse;-webkit-flex-direction:row-reverse;-ms-flex-direction:row-reverse;flex-direction:row-reverse}.flex-row>*{display:block}.flex-col{-webkit-box-flex:1;-webkit-flex:1;-ms-flex:1;flex:1}.flex-middle{-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;-ms-grid-row-align:center;align-items:center}.flex-bottom{-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;-ms-grid-row-align:flex-end;align-items:flex-end}.flex-justify-start{-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start}.flex-justify-end{-webkit-box-pack:end;-webkit-justify-content:flex-end;-ms-flex-pack:end;justify-content:flex-end}.flex-justify-between{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.flex-align-start{-webkit-align-content:flex-start;-ms-flex-line-pack:start;align-content:flex-start}.flex-align-end{-webkit-align-content:flex-end;-ms-flex-line-pack:end;align-content:flex-end}.flex-align-around{-webkit-align-content:space-around;-ms-flex-line-pack:distribute;align-content:space-around}.flex-align-between{-webkit-align-content:space-between;-ms-flex-line-pack:justify;align-content:space-between}.flex-col-auto{-webkit-box-flex:0;-webkit-flex:0 auto;-ms-flex:0 auto;flex:0 auto}.container,.mr-both{margin-left:16px;margin-right:16px}.ml{margin-left:16px}.mr{margin-right:16px}@font-face{font-family:iconfont;src:url('data:application/x-font-woff;charset=utf-8;base64,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') format('woff'),url('//at.alicdn.com/t/font_1461831434_5471206.ttf') format('truetype')}.icon{display:inline-block;font-family:iconfont!important;font-size:.14rem;font-style:normal;font-weight:400;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.icon-lg{font-size:.18rem}.icon-2x{font-size:.28rem}.icon-3x{font-size:.42rem}.icon-4x{font-size:.56rem}.icon-5x{font-size:.7rem}.icon-mode-loop:before{content:\\\"\\\\E602\\\"}.icon-mode-single:before{content:\\\"\\\\E603\\\"}.icon-mode-random:before{content:\\\"\\\\E604\\\"}.icon-search:before{content:\\\"\\\\E605\\\"}.icon-pause:before{content:\\\"\\\\E608\\\"}.icon-play:before{content:\\\"\\\\E607\\\"}.icon-music:before{content:\\\"\\\\E606\\\"}.icon-prev:before{content:\\\"\\\\E600\\\"}.icon-more:before{content:\\\"\\\\E601\\\"}.icon-next:before{content:\\\"\\\\E609\\\"}.bd-t{border:0 solid #dadada;border-top-width:1px}.bd-r{border:0 solid #dadada;border-right-width:1px}.bd-b{border:0 solid #dadada;border-bottom-width:1px}.bd-l{border:0 solid #dadada;border-left-width:1px}.bd-all,.bd-radius{border-width:0;border:1px solid #dadada}.bd-radius{border-radius:4px}.bd-dashed{border-style:dashed!important}hr{border:none}.hr,hr{margin:.7em 0;width:100%;height:1px;background:#dadada;overflow:hidden}@media screen and (-webkit-min-device-pixel-ratio:1.5){.ratina-bd{position:relative;border:none!important}.ratina-bd:before{content:'';position:absolute;top:0;left:0;border:0 solid #dadada;-webkit-transform-origin:0 0;transform-origin:0 0;pointer-events:none;width:150%;height:150%;-webkit-transform:scale(.66666667);transform:scale(.66666667)}.ratina-bd.bd-t:before{border-top-width:1px}.ratina-bd.bd-r:before{border-right-width:1px}.ratina-bd.bd-b:before{border-bottom-width:1px}.ratina-bd.bd-l:before{border-left-width:1px}.ratina-bd.bd-all:before{border-width:1px}.ratina-bd.bd-radius:before{border-width:1px;border-radius:6px}.ratina-bd.bd-dashed:before{border-style:dashed!important}.hr,hr{width:150%;-webkit-transform:scale(.66666667);transform:scale(.66666667);-webkit-transform-origin:0 0;transform-origin:0 0}}@media screen and (-webkit-min-device-pixel-ratio:2){.ratina-bd:before{width:200%;height:200%;-webkit-transform:scale(.5);transform:scale(.5)}.ratina-bd.bd-radius:before{border-radius:8px}.hr,hr{width:200%;-webkit-transform:scale(.5);transform:scale(.5)}}@media screen and (-webkit-min-device-pixel-ratio:3){.ratina-bd:before{width:300%;height:300%;-webkit-transform:scale(.33333333);transform:scale(.33333333)}.ratina-bd.bd-radius:before{border-radius:12px}.hr,hr{width:300%;-webkit-transform:scale(.33333333);transform:scale(.33333333)}}.m-btn{padding:0 16px;text-align:center;box-sizing:content-box;border-radius:4px}.m-btn:active{background:rgba(0,0,0,.26)}.m-btn.icon{width:20px;text-align:center}.m-hd{position:absolute;top:0;left:0;z-index:10;width:100%;height:56px;color:#fff;background:#4caf50;font-size:.16rem;box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}.m-hd .container{margin:10px 0;height:36px;line-height:36px}.m-hd ::-webkit-input-placeholder{color:#9fd69b}.m-hd button{background:none;white-space:nowrap}.m-hd button,.m-key{border:none;font-size:.16rem;color:#fff}.m-key{display:block;width:100%;height:36px;padding:0 40px 0 8px;background:#4caf50;border-bottom:1px solid #fff}.m-key-wrap{position:relative}.m-key-icon{position:absolute;top:1px;right:6px;color:#fff}.m-so{color:#c8e6c9}.m-player{position:absolute;left:0;bottom:0;z-index:66;width:100%;height:56px;background:#fff}.m-player .container{margin:8px 0}.m-pic-s{width:40px;height:40px;margin-right:16px;border-radius:50%;overflow:hidden}.m-act,.m-txt .singer{color:#727272}.m-act{line-height:40px}.m-main{position:absolute;top:0;left:0;z-index:2;width:100%;height:100%;max-height:100%;padding:56px 0 55px;overflow-y:auto;background:#fcfcfc}.m-list-item{line-height:1.8;font-size:.16rem}.m-list-item .container{display:block;height:56px;line-height:56px}.m-list-item:active{background:rgba(0,0,0,.26)}.m-list-item .sub{color:#727272}.m-play-item{position:relative}.m-play-item:after{position:absolute;top:0;left:16px;content:attr(data-index);width:20px;line-height:62px;text-align:center;font-size:.24rem;color:#727272}.m-play-item .container{margin-left:52px;margin-right:0;padding:8px 52px 8px 0;height:auto;line-height:1.7;font-size:.15rem}.m-play-item .sub{font-size:.12rem}.m-play-item .icon-more{position:absolute;top:0;right:0;width:14px;line-height:62px;color:#727272}.m-play-item .icon-more:active{background:none}.progress-line{position:absolute;bottom:0;left:0;z-index:1;height:3px;background:#c8e6c9}.progress-line.primary{background:#388e3c;z-index:2}.fade-in-bottom-transition,.fade-in-left-transition,.fade-out-left-transition{-webkit-transition:all .4s ease;transition:all .4s ease}.fade-in-left-enter,.fade-in-left-leave{-webkit-transform:translate3d(100%,0,0);transform:translate3d(100%,0,0);box-shadow:none}.fade-out-left-enter,.fade-out-left-leave{-webkit-transform:translate3d(-100%,0,0);transform:translate3d(-100%,0,0);box-shadow:none}.fade-in-bottom-enter,.fade-in-bottom-leave{-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/App.vue\n ** module id = 14\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".search-view{position:absolute;top:0;left:0;width:100%;height:100%;max-height:100%;background:#fff;z-index:12}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/SearchView.vue\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = \"<div id=app> <router-view :play-list=playList></router-view> <music-ctrl :song-index=songIndex :play-list=playList></music-ctrl> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/App.vue\n ** module id = 16\n ** module chunks = 0\n **/","module.exports = \"<header id=m-hd class=m-hd> <div class=\\\"flex-row container\\\"> <div class=\\\"m-logo mr-both\\\"><span class=\\\"icon icon-music icon-2x\\\"></span></div> <div class=\\\"flex-col ellipsis\\\">Just Music</div> <div> <span class=\\\"icon m-btn icon-search icon-2x\\\" v-link=\\\"{ path: '/search' }\\\"></span> <span class=\\\"icon m-btn icon-more icon-2x\\\"></span> </div> </div> </header>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Header.vue\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = \"<div class=main-view id=main-view transition=fade-out-left transition-mode=in-out> <music-header></music-header> <play-list :play-list=playList></play-list> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/MainView.vue\n ** module id = 18\n ** module chunks = 0\n **/","module.exports = \"<div class=m-main id=main> <ol class=m-list id=playList v-if=playList> <li class=\\\"m-list-item m-play-item\\\" v-for=\\\"item in playList\\\" data-index=\\\"{{$index + 1}}\\\"> <a href=javascript:; class=\\\"container ratina-bd bd-b\\\" @click=play($index)> <div class=ellipsis>{{item.name}}</div> <div class=\\\"ellipsis sub\\\"> {{item.singer}} - {{item.album||'未知专辑'}} </div> <span class=\\\"icon icon-more icon-lg m-btn\\\" @click.stop.prevent=contextMenu(item)></span> </a> </li> </ol> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PlayList.vue\n ** module id = 19\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"m-player ratina-bd bd-t\\\" id=player v-if=currentSong transition=fade-in-bottom> <div class=container> <div class=\\\"m-pic-s mr-both fl\\\"> <img src=http://placeholder.qiniudn.com/40x40/ccc/fff> </div> <div class=\\\"m-act fr\\\"> <span @click=mode class=\\\"icon icon-lg m-btn\\\" :class=\\\"'icon-mode-' + playMode.list[playMode.index]\\\"></span> <span @click=play class=\\\"icon icon-lg m-btn\\\" :class=\\\"[playState ? 'icon-pause' : 'icon-play']\\\"></span> <span @click=next class=\\\"icon icon-lg m-btn icon-next\\\"></span> </div> <div class=\\\"m-txt oh\\\"> <div class=\\\"song ellipsis\\\">{{currentSong ? currentSong.name : ''}}</div> <div class=\\\"singer ellipsis\\\">{{currentSong ? currentSong.singer : ''}}</div> </div> <audio autoplay v-el:music @play=playStateChange @pause=playStateChange @ended=playEnded @progress=progress @timeupdate=timeupdate> <source type=audio/mpeg :src=currentSong.url v-if=currentSong> </audio> </div> <progress-line :running=running :total=total></progress-line> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Player.vue\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = \"<div class=\\\"progress-line primary\\\" :style=\\\"{ width: running + '%' }\\\"></div> <div class=progress-line :style=\\\"{ width: total + '%' }\\\"></div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/ProgressLine.vue\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = \"<div class=m-main> <ul class=m-list id=searchList v-if=searchList> <li class=m-list-item v-for=\\\"item in searchList\\\"> <a href=javascript:; class=\\\"container ratina-bd bd-b\\\" @click=onItemClick(item)> <div class=ellipsis>{{item.name}} - {{item.singer}}</div> </a> </li> </ul> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/SearchList.vue\n ** module id = 22\n ** module chunks = 0\n **/","module.exports = \"<div class=search-view id=search-view transition=fade-in-left transition-mode=out-in> <header id=search-hd class=m-hd> <div class=\\\"flex-row container\\\"> <span class=\\\"m-btn icon icon-2x icon-prev\\\" v-link=\\\"{ path: '/' }\\\"></span> <div class=\\\"flex-col mr-both m-key-wrap\\\"> <input type=text class=m-key v-model=key placeholder=\\\"歌名 艺人 专辑\\\"> <span class=\\\"icon icon-search icon-2x m-key-icon\\\" @click=search></span> </div> </div> </header> <search-list :search-list=searchList></search-list> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/SearchView.vue\n ** module id = 23\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!less!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/App.vue\n ** module id = 24\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Header.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Header.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Header.vue\n ** module id = 25\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./MainView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./MainView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/MainView.vue\n ** module id = 26\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./PlayList.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./PlayList.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/PlayList.vue\n ** module id = 27\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Player.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Player.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Player.vue\n ** module id = 28\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./ProgressLine.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./ProgressLine.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/ProgressLine.vue\n ** module id = 29\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./SearchList.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./SearchList.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/SearchList.vue\n ** module id = 30\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!vue-style-loader!css-loader!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./SearchView.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./SearchView.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/SearchView.vue\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Before Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (_.isFunction(request.beforeSend)) {\n            request.beforeSend.call(this, request);\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/before.js\n ** module id = 32\n ** module chunks = 0\n **/","/**\n * Base client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\nvar xhrClient = require('./xhr');\n\nmodule.exports = function (request) {\n\n    var response = (request.client || xhrClient)(request);\n\n    return Promise.resolve(response).then(function (response) {\n\n        if (response.headers) {\n\n            var headers = parseHeaders(response.headers);\n\n            response.headers = function (name) {\n\n                if (name) {\n                    return headers[_.toLower(name)];\n                }\n\n                return headers;\n            };\n\n        }\n\n        response.ok = response.status >= 200 && response.status < 300;\n\n        return response;\n    });\n\n};\n\nfunction parseHeaders(str) {\n\n    var headers = {}, value, name, i;\n\n    if (_.isString(str)) {\n        _.each(str.split('\\n'), function (row) {\n\n            i = row.indexOf(':');\n            name = _.trim(_.toLower(row.slice(0, i)));\n            value = _.trim(row.slice(i + 1));\n\n            if (headers[name]) {\n\n                if (_.isArray(headers[name])) {\n                    headers[name].push(value);\n                } else {\n                    headers[name] = [headers[name], value];\n                }\n\n            } else {\n\n                headers[name] = value;\n            }\n\n        });\n    }\n\n    return headers;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/index.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\n * JSONP client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var callback = '_jsonp' + Math.random().toString(36).substr(2), response = {request: request, data: null}, handler, script;\n\n        request.params[request.jsonp] = callback;\n        request.cancel = function () {\n            handler({type: 'cancel'});\n        };\n\n        script = document.createElement('script');\n        script.src = _.url(request);\n        script.type = 'text/javascript';\n        script.async = true;\n\n        window[callback] = function (data) {\n            response.data = data;\n        };\n\n        handler = function (event) {\n\n            if (event.type === 'load' && response.data !== null) {\n                response.status = 200;\n            } else if (event.type === 'error') {\n                response.status = 404;\n            } else {\n                response.status = 0;\n            }\n\n            resolve(response);\n\n            delete window[callback];\n            document.body.removeChild(script);\n        };\n\n        script.onload = handler;\n        script.onerror = handler;\n\n        document.body.appendChild(script);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/jsonp.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\n * XDomain client (Internet Explorer).\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xdr = new XDomainRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xdr.abort();\n        };\n\n        xdr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xdr.responseText;\n            response.status = xdr.status;\n            response.statusText = xdr.statusText;\n\n            resolve(response);\n        };\n\n        xdr.timeout = 0;\n        xdr.onload = handler;\n        xdr.onabort = handler;\n        xdr.onerror = handler;\n        xdr.ontimeout = function () {};\n        xdr.onprogress = function () {};\n\n        xdr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xdr.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\n * XMLHttp client.\n */\n\nvar _ = require('../../util');\nvar Promise = require('../../promise');\n\nmodule.exports = function (request) {\n    return new Promise(function (resolve) {\n\n        var xhr = new XMLHttpRequest(), response = {request: request}, handler;\n\n        request.cancel = function () {\n            xhr.abort();\n        };\n\n        xhr.open(request.method, _.url(request), true);\n\n        handler = function (event) {\n\n            response.data = xhr.responseText;\n            response.status = xhr.status;\n            response.statusText = xhr.statusText;\n            response.headers = xhr.getAllResponseHeaders();\n\n            resolve(response);\n        };\n\n        xhr.timeout = 0;\n        xhr.onload = handler;\n        xhr.onabort = handler;\n        xhr.onerror = handler;\n        xhr.ontimeout = function () {};\n        xhr.onprogress = function () {};\n\n        if (_.isPlainObject(request.xhr)) {\n            _.extend(xhr, request.xhr);\n        }\n\n        if (_.isPlainObject(request.upload)) {\n            _.extend(xhr.upload, request.upload);\n        }\n\n        _.each(request.headers || {}, function (value, header) {\n            xhr.setRequestHeader(header, value);\n        });\n\n        xhr.send(request.data);\n    });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/client/xhr.js\n ** module id = 36\n ** module chunks = 0\n **/","/**\n * CORS Interceptor.\n */\n\nvar _ = require('../util');\nvar xdrClient = require('./client/xdr');\nvar xhrCors = 'withCredentials' in new XMLHttpRequest();\nvar originUrl = _.url.parse(location.href);\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.crossOrigin === null) {\n            request.crossOrigin = crossOrigin(request);\n        }\n\n        if (request.crossOrigin) {\n\n            if (!xhrCors) {\n                request.client = xdrClient;\n            }\n\n            request.emulateHTTP = false;\n        }\n\n        return request;\n    }\n\n};\n\nfunction crossOrigin(request) {\n\n    var requestUrl = _.url.parse(_.url(request));\n\n    return (requestUrl.protocol !== originUrl.protocol || requestUrl.host !== originUrl.host);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/cors.js\n ** module id = 37\n ** module chunks = 0\n **/","/**\n * Header Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        request.method = request.method.toUpperCase();\n        request.headers = _.extend({}, _.http.headers.common,\n            !request.crossOrigin ? _.http.headers.custom : {},\n            _.http.headers[request.method.toLowerCase()],\n            request.headers\n        );\n\n        if (_.isPlainObject(request.data) && /^(GET|JSONP)$/i.test(request.method)) {\n            _.extend(request.params, request.data);\n            delete request.data;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/header.js\n ** module id = 38\n ** module chunks = 0\n **/","/**\n * Service for sending network requests.\n */\n\nvar _ = require('../util');\nvar Client = require('./client');\nvar Promise = require('../promise');\nvar interceptor = require('./interceptor');\nvar jsonType = {'Content-Type': 'application/json'};\n\nfunction Http(url, options) {\n\n    var client = Client, request, promise;\n\n    Http.interceptors.forEach(function (handler) {\n        client = interceptor(handler, this.$vm)(client);\n    }, this);\n\n    options = _.isObject(url) ? url : _.extend({url: url}, options);\n    request = _.merge({}, Http.options, this.$options, options);\n    promise = client(request).bind(this.$vm).then(function (response) {\n\n        return response.ok ? response : Promise.reject(response);\n\n    }, function (response) {\n\n        if (response instanceof Error) {\n            _.error(response);\n        }\n\n        return Promise.reject(response);\n    });\n\n    if (request.success) {\n        promise.success(request.success);\n    }\n\n    if (request.error) {\n        promise.error(request.error);\n    }\n\n    return promise;\n}\n\nHttp.options = {\n    method: 'get',\n    data: '',\n    params: {},\n    headers: {},\n    xhr: null,\n    upload: null,\n    jsonp: 'callback',\n    beforeSend: null,\n    crossOrigin: null,\n    emulateHTTP: false,\n    emulateJSON: false,\n    timeout: 0\n};\n\nHttp.interceptors = [\n    require('./before'),\n    require('./timeout'),\n    require('./jsonp'),\n    require('./method'),\n    require('./mime'),\n    require('./header'),\n    require('./cors')\n];\n\nHttp.headers = {\n    put: jsonType,\n    post: jsonType,\n    patch: jsonType,\n    delete: jsonType,\n    common: {'Accept': 'application/json, text/plain, */*'},\n    custom: {'X-Requested-With': 'XMLHttpRequest'}\n};\n\n['get', 'put', 'post', 'patch', 'delete', 'jsonp'].forEach(function (method) {\n\n    Http[method] = function (url, data, success, options) {\n\n        if (_.isFunction(data)) {\n            options = success;\n            success = data;\n            data = undefined;\n        }\n\n        if (_.isObject(success)) {\n            options = success;\n            success = undefined;\n        }\n\n        return this(url, _.extend({method: method, data: data, success: success}, options));\n    };\n});\n\nmodule.exports = _.http = Http;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/index.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\n * Interceptor factory.\n */\n\nvar _ = require('../util');\nvar Promise = require('../promise');\n\nmodule.exports = function (handler, vm) {\n\n    return function (client) {\n\n        if (_.isFunction(handler)) {\n            handler = handler.call(vm, Promise);\n        }\n\n        return function (request) {\n\n            if (_.isFunction(handler.request)) {\n                request = handler.request.call(vm, request);\n            }\n\n            return when(request, function (request) {\n                return when(client(request), function (response) {\n\n                    if (_.isFunction(handler.response)) {\n                        response = handler.response.call(vm, response);\n                    }\n\n                    return response;\n                });\n            });\n        };\n    };\n};\n\nfunction when(value, fulfilled, rejected) {\n\n    var promise = Promise.resolve(value);\n\n    if (arguments.length < 2) {\n        return promise;\n    }\n\n    return promise.then(fulfilled, rejected);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/interceptor.js\n ** module id = 40\n ** module chunks = 0\n **/","/**\n * JSONP Interceptor.\n */\n\nvar jsonpClient = require('./client/jsonp');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.method == 'JSONP') {\n            request.client = jsonpClient;\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/jsonp.js\n ** module id = 41\n ** module chunks = 0\n **/","/**\n * HTTP method override Interceptor.\n */\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateHTTP && /^(PUT|PATCH|DELETE)$/i.test(request.method)) {\n            request.headers['X-HTTP-Method-Override'] = request.method;\n            request.method = 'POST';\n        }\n\n        return request;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/method.js\n ** module id = 42\n ** module chunks = 0\n **/","/**\n * Mime Interceptor.\n */\n\nvar _ = require('../util');\n\nmodule.exports = {\n\n    request: function (request) {\n\n        if (request.emulateJSON && _.isPlainObject(request.data)) {\n            request.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n            request.data = _.url.params(request.data);\n        }\n\n        if (_.isObject(request.data) && /FormData/i.test(request.data.toString())) {\n            delete request.headers['Content-Type'];\n        }\n\n        if (_.isPlainObject(request.data)) {\n            request.data = JSON.stringify(request.data);\n        }\n\n        return request;\n    },\n\n    response: function (response) {\n\n        try {\n            response.data = JSON.parse(response.data);\n        } catch (e) {}\n\n        return response;\n    }\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/mime.js\n ** module id = 43\n ** module chunks = 0\n **/","/**\n * Timeout Interceptor.\n */\n\nmodule.exports = function () {\n\n    var timeout;\n\n    return {\n\n        request: function (request) {\n\n            if (request.timeout) {\n                timeout = setTimeout(function () {\n                    request.cancel();\n                }, request.timeout);\n            }\n\n            return request;\n        },\n\n        response: function (response) {\n\n            clearTimeout(timeout);\n\n            return response;\n        }\n\n    };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/http/timeout.js\n ** module id = 44\n ** module chunks = 0\n **/","/**\n * Install plugin.\n */\n\nfunction install(Vue) {\n\n    var _ = require('./util');\n\n    _.config = Vue.config;\n    _.warning = Vue.util.warn;\n    _.nextTick = Vue.util.nextTick;\n\n    Vue.url = require('./url');\n    Vue.http = require('./http');\n    Vue.resource = require('./resource');\n    Vue.Promise = require('./promise');\n\n    Object.defineProperties(Vue.prototype, {\n\n        $url: {\n            get: function () {\n                return _.options(Vue.url, this, this.$options.url);\n            }\n        },\n\n        $http: {\n            get: function () {\n                return _.options(Vue.http, this, this.$options.http);\n            }\n        },\n\n        $resource: {\n            get: function () {\n                return Vue.resource.bind(this);\n            }\n        },\n\n        $promise: {\n            get: function () {\n                return function (executor) {\n                    return new Vue.Promise(executor, this);\n                }.bind(this);\n            }\n        }\n\n    });\n}\n\nif (window.Vue) {\n    Vue.use(install);\n}\n\nmodule.exports = install;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/index.js\n ** module id = 45\n ** module chunks = 0\n **/","/**\n * Promises/A+ polyfill v1.1.4 (https://github.com/bramstein/promis)\n */\n\nvar _ = require('../util');\n\nvar RESOLVED = 0;\nvar REJECTED = 1;\nvar PENDING  = 2;\n\nfunction Promise(executor) {\n\n    this.state = PENDING;\n    this.value = undefined;\n    this.deferred = [];\n\n    var promise = this;\n\n    try {\n        executor(function (x) {\n            promise.resolve(x);\n        }, function (r) {\n            promise.reject(r);\n        });\n    } catch (e) {\n        promise.reject(e);\n    }\n}\n\nPromise.reject = function (r) {\n    return new Promise(function (resolve, reject) {\n        reject(r);\n    });\n};\n\nPromise.resolve = function (x) {\n    return new Promise(function (resolve, reject) {\n        resolve(x);\n    });\n};\n\nPromise.all = function all(iterable) {\n    return new Promise(function (resolve, reject) {\n        var count = 0, result = [];\n\n        if (iterable.length === 0) {\n            resolve(result);\n        }\n\n        function resolver(i) {\n            return function (x) {\n                result[i] = x;\n                count += 1;\n\n                if (count === iterable.length) {\n                    resolve(result);\n                }\n            };\n        }\n\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolver(i), reject);\n        }\n    });\n};\n\nPromise.race = function race(iterable) {\n    return new Promise(function (resolve, reject) {\n        for (var i = 0; i < iterable.length; i += 1) {\n            Promise.resolve(iterable[i]).then(resolve, reject);\n        }\n    });\n};\n\nvar p = Promise.prototype;\n\np.resolve = function resolve(x) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (x === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        var called = false;\n\n        try {\n            var then = x && x['then'];\n\n            if (x !== null && typeof x === 'object' && typeof then === 'function') {\n                then.call(x, function (x) {\n                    if (!called) {\n                        promise.resolve(x);\n                    }\n                    called = true;\n\n                }, function (r) {\n                    if (!called) {\n                        promise.reject(r);\n                    }\n                    called = true;\n                });\n                return;\n            }\n        } catch (e) {\n            if (!called) {\n                promise.reject(e);\n            }\n            return;\n        }\n\n        promise.state = RESOLVED;\n        promise.value = x;\n        promise.notify();\n    }\n};\n\np.reject = function reject(reason) {\n    var promise = this;\n\n    if (promise.state === PENDING) {\n        if (reason === promise) {\n            throw new TypeError('Promise settled with itself.');\n        }\n\n        promise.state = REJECTED;\n        promise.value = reason;\n        promise.notify();\n    }\n};\n\np.notify = function notify() {\n    var promise = this;\n\n    _.nextTick(function () {\n        if (promise.state !== PENDING) {\n            while (promise.deferred.length) {\n                var deferred = promise.deferred.shift(),\n                    onResolved = deferred[0],\n                    onRejected = deferred[1],\n                    resolve = deferred[2],\n                    reject = deferred[3];\n\n                try {\n                    if (promise.state === RESOLVED) {\n                        if (typeof onResolved === 'function') {\n                            resolve(onResolved.call(undefined, promise.value));\n                        } else {\n                            resolve(promise.value);\n                        }\n                    } else if (promise.state === REJECTED) {\n                        if (typeof onRejected === 'function') {\n                            resolve(onRejected.call(undefined, promise.value));\n                        } else {\n                            reject(promise.value);\n                        }\n                    }\n                } catch (e) {\n                    reject(e);\n                }\n            }\n        }\n    });\n};\n\np.then = function then(onResolved, onRejected) {\n    var promise = this;\n\n    return new Promise(function (resolve, reject) {\n        promise.deferred.push([onResolved, onRejected, resolve, reject]);\n        promise.notify();\n    });\n};\n\np.catch = function (onRejected) {\n    return this.then(undefined, onRejected);\n};\n\nmodule.exports = Promise;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/promise.js\n ** module id = 46\n ** module chunks = 0\n **/","/**\n * URL Template v2.0.6 (https://github.com/bramstein/url-template)\n */\n\nexports.expand = function (url, params, variables) {\n\n    var tmpl = this.parse(url), expanded = tmpl.expand(params);\n\n    if (variables) {\n        variables.push.apply(variables, tmpl.vars);\n    }\n\n    return expanded;\n};\n\nexports.parse = function (template) {\n\n    var operators = ['+', '#', '.', '/', ';', '?', '&'], variables = [];\n\n    return {\n        vars: variables,\n        expand: function (context) {\n            return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n                if (expression) {\n\n                    var operator = null, values = [];\n\n                    if (operators.indexOf(expression.charAt(0)) !== -1) {\n                        operator = expression.charAt(0);\n                        expression = expression.substr(1);\n                    }\n\n                    expression.split(/,/g).forEach(function (variable) {\n                        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                        values.push.apply(values, exports.getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n                        variables.push(tmp[1]);\n                    });\n\n                    if (operator && operator !== '+') {\n\n                        var separator = ',';\n\n                        if (operator === '?') {\n                            separator = '&';\n                        } else if (operator !== '#') {\n                            separator = operator;\n                        }\n\n                        return (values.length !== 0 ? operator : '') + values.join(separator);\n                    } else {\n                        return values.join(',');\n                    }\n\n                } else {\n                    return exports.encodeReserved(literal);\n                }\n            });\n        }\n    };\n};\n\nexports.getValues = function (context, operator, key, modifier) {\n\n    var value = context[key], result = [];\n\n    if (this.isDefined(value) && value !== '') {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n            value = value.toString();\n\n            if (modifier && modifier !== '*') {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n\n            result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n        } else {\n            if (modifier === '*') {\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        result.push(this.encodeValue(operator, value, this.isKeyOperator(operator) ? key : null));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            result.push(this.encodeValue(operator, value[k], k));\n                        }\n                    }, this);\n                }\n            } else {\n                var tmp = [];\n\n                if (Array.isArray(value)) {\n                    value.filter(this.isDefined).forEach(function (value) {\n                        tmp.push(this.encodeValue(operator, value));\n                    }, this);\n                } else {\n                    Object.keys(value).forEach(function (k) {\n                        if (this.isDefined(value[k])) {\n                            tmp.push(encodeURIComponent(k));\n                            tmp.push(this.encodeValue(operator, value[k].toString()));\n                        }\n                    }, this);\n                }\n\n                if (this.isKeyOperator(operator)) {\n                    result.push(encodeURIComponent(key) + '=' + tmp.join(','));\n                } else if (tmp.length !== 0) {\n                    result.push(tmp.join(','));\n                }\n            }\n        }\n    } else {\n        if (operator === ';') {\n            result.push(encodeURIComponent(key));\n        } else if (value === '' && (operator === '&' || operator === '?')) {\n            result.push(encodeURIComponent(key) + '=');\n        } else if (value === '') {\n            result.push('');\n        }\n    }\n\n    return result;\n};\n\nexports.isDefined = function (value) {\n    return value !== undefined && value !== null;\n};\n\nexports.isKeyOperator = function (operator) {\n    return operator === ';' || operator === '&' || operator === '?';\n};\n\nexports.encodeValue = function (operator, value, key) {\n\n    value = (operator === '+' || operator === '#') ? this.encodeReserved(value) : encodeURIComponent(value);\n\n    if (key) {\n        return encodeURIComponent(key) + '=' + value;\n    } else {\n        return value;\n    }\n};\n\nexports.encodeReserved = function (str) {\n    return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part);\n        }\n        return part;\n    }).join('');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/lib/url-template.js\n ** module id = 47\n ** module chunks = 0\n **/","/**\n * Service for interacting with RESTful services.\n */\n\nvar _ = require('./util');\n\nfunction Resource(url, params, actions, options) {\n\n    var self = this, resource = {};\n\n    actions = _.extend({},\n        Resource.actions,\n        actions\n    );\n\n    _.each(actions, function (action, name) {\n\n        action = _.merge({url: url, params: params || {}}, options, action);\n\n        resource[name] = function () {\n            return (self.$http || _.http)(opts(action, arguments));\n        };\n    });\n\n    return resource;\n}\n\nfunction opts(action, args) {\n\n    var options = _.extend({}, action), params = {}, data, success, error;\n\n    switch (args.length) {\n\n        case 4:\n\n            error = args[3];\n            success = args[2];\n\n        case 3:\n        case 2:\n\n            if (_.isFunction(args[1])) {\n\n                if (_.isFunction(args[0])) {\n\n                    success = args[0];\n                    error = args[1];\n\n                    break;\n                }\n\n                success = args[1];\n                error = args[2];\n\n            } else {\n\n                params = args[0];\n                data = args[1];\n                success = args[2];\n\n                break;\n            }\n\n        case 1:\n\n            if (_.isFunction(args[0])) {\n                success = args[0];\n            } else if (/^(POST|PUT|PATCH)$/i.test(options.method)) {\n                data = args[0];\n            } else {\n                params = args[0];\n            }\n\n            break;\n\n        case 0:\n\n            break;\n\n        default:\n\n            throw 'Expected up to 4 arguments [params, data, success, error], got ' + args.length + ' arguments';\n    }\n\n    options.data = data;\n    options.params = _.extend({}, options.params, params);\n\n    if (success) {\n        options.success = success;\n    }\n\n    if (error) {\n        options.error = error;\n    }\n\n    return options;\n}\n\nResource.actions = {\n\n    get: {method: 'GET'},\n    save: {method: 'POST'},\n    query: {method: 'GET'},\n    update: {method: 'PUT'},\n    remove: {method: 'DELETE'},\n    delete: {method: 'DELETE'}\n\n};\n\nmodule.exports = _.resource = Resource;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/resource.js\n ** module id = 48\n ** module chunks = 0\n **/","/**\n * Service for URL templating.\n */\n\nvar _ = require('../util');\nvar ie = document.documentMode;\nvar el = document.createElement('a');\n\nfunction Url(url, params) {\n\n    var options = url, transform;\n\n    if (_.isString(url)) {\n        options = {url: url, params: params};\n    }\n\n    options = _.merge({}, Url.options, this.$options, options);\n\n    Url.transforms.forEach(function (handler) {\n        transform = factory(handler, transform, this.$vm);\n    }, this);\n\n    return transform(options);\n};\n\n/**\n * Url options.\n */\n\nUrl.options = {\n    url: '',\n    root: null,\n    params: {}\n};\n\n/**\n * Url transforms.\n */\n\nUrl.transforms = [\n    require('./template'),\n    require('./legacy'),\n    require('./query'),\n    require('./root')\n];\n\n/**\n * Encodes a Url parameter string.\n *\n * @param {Object} obj\n */\n\nUrl.params = function (obj) {\n\n    var params = [], escape = encodeURIComponent;\n\n    params.add = function (key, value) {\n\n        if (_.isFunction(value)) {\n            value = value();\n        }\n\n        if (value === null) {\n            value = '';\n        }\n\n        this.push(escape(key) + '=' + escape(value));\n    };\n\n    serialize(params, obj);\n\n    return params.join('&').replace(/%20/g, '+');\n};\n\n/**\n * Parse a URL and return its components.\n *\n * @param {String} url\n */\n\nUrl.parse = function (url) {\n\n    if (ie) {\n        el.href = url;\n        url = el.href;\n    }\n\n    el.href = url;\n\n    return {\n        href: el.href,\n        protocol: el.protocol ? el.protocol.replace(/:$/, '') : '',\n        port: el.port,\n        host: el.host,\n        hostname: el.hostname,\n        pathname: el.pathname.charAt(0) === '/' ? el.pathname : '/' + el.pathname,\n        search: el.search ? el.search.replace(/^\\?/, '') : '',\n        hash: el.hash ? el.hash.replace(/^#/, '') : ''\n    };\n};\n\nfunction factory(handler, next, vm) {\n    return function (options) {\n        return handler.call(vm, options, next);\n    };\n}\n\nfunction serialize(params, obj, scope) {\n\n    var array = _.isArray(obj), plain = _.isPlainObject(obj), hash;\n\n    _.each(obj, function (value, key) {\n\n        hash = _.isObject(value) || _.isArray(value);\n\n        if (scope) {\n            key = scope + '[' + (plain || hash ? key : '') + ']';\n        }\n\n        if (!scope && array) {\n            params.add(value.name, value.value);\n        } else if (hash) {\n            serialize(params, value, key);\n        } else {\n            params.add(key, value);\n        }\n    });\n}\n\nmodule.exports = _.url = Url;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/index.js\n ** module id = 49\n ** module chunks = 0\n **/","/**\n * Legacy Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var variables = [], url = next(options);\n\n    url = url.replace(/(\\/?):([a-z]\\w*)/gi, function (match, slash, name) {\n\n        _.warn('The `:' + name + '` parameter syntax has been deprecated. Use the `{' + name + '}` syntax instead.');\n\n        if (options.params[name]) {\n            variables.push(name);\n            return slash + encodeUriSegment(options.params[name]);\n        }\n\n        return '';\n    });\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\nfunction encodeUriSegment(value) {\n\n    return encodeUriQuery(value, true).\n        replace(/%26/gi, '&').\n        replace(/%3D/gi, '=').\n        replace(/%2B/gi, '+');\n}\n\nfunction encodeUriQuery(value, spaces) {\n\n    return encodeURIComponent(value).\n        replace(/%40/gi, '@').\n        replace(/%3A/gi, ':').\n        replace(/%24/g, '$').\n        replace(/%2C/gi, ',').\n        replace(/%20/g, (spaces ? '%20' : '+'));\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/legacy.js\n ** module id = 50\n ** module chunks = 0\n **/","/**\n * Query Parameter Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var urlParams = Object.keys(_.url.options.params), query = {}, url = next(options);\n\n   _.each(options.params, function (value, key) {\n        if (urlParams.indexOf(key) === -1) {\n            query[key] = value;\n        }\n    });\n\n    query = _.url.params(query);\n\n    if (query) {\n        url += (url.indexOf('?') == -1 ? '?' : '&') + query;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/query.js\n ** module id = 51\n ** module chunks = 0\n **/","/**\n * Root Prefix Transform.\n */\n\nvar _ = require('../util');\n\nmodule.exports = function (options, next) {\n\n    var url = next(options);\n\n    if (_.isString(options.root) && !url.match(/^(https?:)?\\//)) {\n        url = options.root + '/' + url;\n    }\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/root.js\n ** module id = 52\n ** module chunks = 0\n **/","/**\n * URL Template (RFC 6570) Transform.\n */\n\nvar UrlTemplate = require('../lib/url-template');\n\nmodule.exports = function (options) {\n\n    var variables = [], url = UrlTemplate.expand(options.url, options.params, variables);\n\n    variables.forEach(function (key) {\n        delete options.params[key];\n    });\n\n    return url;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-resource/src/url/template.js\n ** module id = 53\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 54\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/less-loader/index.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/App.vue\n ** module id = 55\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/vue-style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./SearchView.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-style-loader!./~/css-loader!./~/vue-loader/lib/style-rewriter.js!./~/vue-loader/lib/selector.js?type=style&index=0!./src/components/SearchView.vue\n ** module id = 56\n ** module chunks = 0\n **/"],"sourceRoot":""}